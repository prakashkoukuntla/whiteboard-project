{"ast":null,"code":"function stringFormatter(opts = {}) {\n  const quote = typeof opts.quote === 'string' ? opts.quote : '\"';\n  const escapedQuote = typeof opts.escapedQuote === 'string' ? opts.escapedQuote : `${quote}${quote}`;\n  if (!quote) {\n    return value => value;\n  }\n  return value => {\n    if (value.includes(quote)) {\n      value = value.replace(new RegExp(quote, 'g'), escapedQuote);\n    }\n    return `${quote}${value}${quote}`;\n  };\n}\nmodule.exports = stringFormatter;","map":{"version":3,"names":["stringFormatter","opts","quote","escapedQuote","value","includes","replace","RegExp","module","exports"],"sources":["/Users/prakashkoukuntla/Goblins-Whiteboard-App/frontend/new-whiteboard-web/node_modules/json2csv/lib/formatters/string.js"],"sourcesContent":["function stringFormatter(opts = {}) {\n  const quote = typeof opts.quote === 'string' ? opts.quote  : '\"';\n  const escapedQuote = typeof opts.escapedQuote === 'string' ? opts.escapedQuote : `${quote}${quote}`;\n\n  if (!quote) {\n    return (value) => value;\n  }\n\n  return (value) => {\n    if(value.includes(quote)) {\n      value = value.replace(new RegExp(quote, 'g'), escapedQuote);\n    }\n\n    return `${quote}${value}${quote}`;\n  }\n}\n\nmodule.exports = stringFormatter;\n"],"mappings":"AAAA,SAASA,eAAeA,CAACC,IAAI,GAAG,CAAC,CAAC,EAAE;EAClC,MAAMC,KAAK,GAAG,OAAOD,IAAI,CAACC,KAAK,KAAK,QAAQ,GAAGD,IAAI,CAACC,KAAK,GAAI,GAAG;EAChE,MAAMC,YAAY,GAAG,OAAOF,IAAI,CAACE,YAAY,KAAK,QAAQ,GAAGF,IAAI,CAACE,YAAY,GAAG,GAAGD,KAAK,GAAGA,KAAK,EAAE;EAEnG,IAAI,CAACA,KAAK,EAAE;IACV,OAAQE,KAAK,IAAKA,KAAK;EACzB;EAEA,OAAQA,KAAK,IAAK;IAChB,IAAGA,KAAK,CAACC,QAAQ,CAACH,KAAK,CAAC,EAAE;MACxBE,KAAK,GAAGA,KAAK,CAACE,OAAO,CAAC,IAAIC,MAAM,CAACL,KAAK,EAAE,GAAG,CAAC,EAAEC,YAAY,CAAC;IAC7D;IAEA,OAAO,GAAGD,KAAK,GAAGE,KAAK,GAAGF,KAAK,EAAE;EACnC,CAAC;AACH;AAEAM,MAAM,CAACC,OAAO,GAAGT,eAAe","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
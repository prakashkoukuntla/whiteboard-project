{"ast":null,"code":"var _jsxFileName = \"/Users/prakashkoukuntla/Goblins-Whiteboard-App/frontend/new-whiteboard-web/src/pages/WhiteboardLabelingPage.js\",\n  _s = $RefreshSig$();\n// src/pages/WhiteboardLabelingPage.js\nimport React, { useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { Container, Typography, Button, IconButton, Dialog, DialogTitle, DialogContent, DialogActions, TextField } from \"@mui/material\";\nimport { ArrowBack } from \"@mui/icons-material\";\nimport { Stage, Layer, Image as KonvaImage, Rect } from \"react-konva\";\nimport useImage from \"use-image\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst whiteboards = [{\n  id: \"wb_456\",\n  imageUrl: \"https://via.placeholder.com/1200x800\",\n  annotated: true\n}, {\n  id: \"wb_457\",\n  imageUrl: \"https://via.placeholder.com/1200x800\",\n  annotated: false\n}, {\n  id: \"wb_458\",\n  imageUrl: \"https://via.placeholder.com/1200x800\",\n  annotated: false\n}];\n\n// Define color states for confidence levels\nconst confidenceColors = [\"rgba(0, 255, 0, 0.5)\", \"rgba(255, 165, 0, 0.5)\", \"rgba(255, 0, 0, 0.5)\"];\nfunction WhiteboardLabelingPage() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const whiteboard = whiteboards.find(wb => wb.id === id);\n  const [image] = useImage(whiteboard ? whiteboard.imageUrl : \"\");\n  const [annotations, setAnnotations] = useState([]);\n  const [newAnnotation, setNewAnnotation] = useState(null);\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [activeAnnotation, setActiveAnnotation] = useState(null);\n  const [transcription, setTranscription] = useState(\"\");\n  const handleMouseDown = e => {\n    const {\n      x,\n      y\n    } = e.target.getStage().getPointerPosition();\n    setNewAnnotation({\n      x,\n      y,\n      width: 0,\n      height: 0,\n      confidenceLevel: 0,\n      transcription: \"\"\n    });\n  };\n  const handleMouseMove = e => {\n    if (!newAnnotation) return;\n    const stage = e.target.getStage();\n    const pointerPosition = stage.getPointerPosition();\n    setNewAnnotation({\n      ...newAnnotation,\n      width: pointerPosition.x - newAnnotation.x,\n      height: pointerPosition.y - newAnnotation.y\n    });\n  };\n  const handleMouseUp = () => {\n    if (newAnnotation) {\n      setAnnotations(prevAnnotations => [...prevAnnotations, newAnnotation]);\n      setNewAnnotation(null);\n    }\n  };\n  const handleAnnotationClick = index => {\n    setAnnotations(prevAnnotations => prevAnnotations.map((ann, i) => i === index ? {\n      ...ann,\n      confidenceLevel: (ann.confidenceLevel + 1) % confidenceColors.length\n    } : ann));\n    setActiveAnnotation(index);\n    setTranscription(annotations[index].transcription);\n    setDialogOpen(true);\n  };\n  const handleDialogClose = () => {\n    setDialogOpen(false);\n    setActiveAnnotation(null);\n  };\n  const handleSaveTranscription = () => {\n    setAnnotations(prevAnnotations => prevAnnotations.map((ann, i) => i === activeAnnotation ? {\n      ...ann,\n      transcription\n    } : ann));\n    handleDialogClose();\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: false,\n    style: {\n      overflow: \"auto\",\n      height: \"100vh\",\n      display: \"flex\",\n      flexDirection: \"column\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: () => navigate(\"/whiteboards\"),\n      style: {\n        position: \"fixed\",\n        top: \"20px\",\n        left: \"20px\",\n        zIndex: 1000\n      },\n      children: /*#__PURE__*/_jsxDEV(ArrowBack, {\n        fontSize: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      style: {\n        position: \"fixed\",\n        top: \"20px\",\n        left: \"50%\",\n        transform: \"translateX(-50%)\",\n        zIndex: 1000,\n        opacity: 0.8,\n        backgroundColor: \"white\",\n        padding: \"5px 15px\",\n        borderRadius: \"4px\"\n      },\n      children: [\"Whiteboard ID: \", id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), whiteboard ? /*#__PURE__*/_jsxDEV(Stage, {\n      width: 1200,\n      height: 800,\n      onMouseDown: handleMouseDown,\n      onMouseMove: handleMouseMove,\n      onMouseUp: handleMouseUp,\n      style: {\n        margin: \"0 auto\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Layer, {\n        children: [/*#__PURE__*/_jsxDEV(KonvaImage, {\n          image: image,\n          width: 1200,\n          height: 800\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this), annotations.map((rect, i) => /*#__PURE__*/_jsxDEV(Rect, {\n          x: rect.x,\n          y: rect.y,\n          width: rect.width,\n          height: rect.height,\n          fill: confidenceColors[rect.confidenceLevel],\n          onClick: () => handleAnnotationClick(i)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 15\n        }, this)), newAnnotation && /*#__PURE__*/_jsxDEV(Rect, {\n          x: newAnnotation.x,\n          y: newAnnotation.y,\n          width: newAnnotation.width,\n          height: newAnnotation.height,\n          fill: \"rgba(0,0,255,0.5)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"error\",\n      children: \"Whiteboard not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: dialogOpen,\n      onClose: handleDialogClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Enter Transcription\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          autoFocus: true,\n          margin: \"dense\",\n          label: \"Transcription\",\n          fullWidth: true,\n          value: transcription,\n          onChange: e => setTranscription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleDialogClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSaveTranscription,\n          color: \"primary\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n_s(WhiteboardLabelingPage, \"yJip/5UTgOGB+PdaY9VV7udhCxs=\", false, function () {\n  return [useParams, useNavigate, useImage];\n});\n_c = WhiteboardLabelingPage;\nexport default WhiteboardLabelingPage;\nvar _c;\n$RefreshReg$(_c, \"WhiteboardLabelingPage\");","map":{"version":3,"names":["React","useState","useParams","useNavigate","Container","Typography","Button","IconButton","Dialog","DialogTitle","DialogContent","DialogActions","TextField","ArrowBack","Stage","Layer","Image","KonvaImage","Rect","useImage","jsxDEV","_jsxDEV","whiteboards","id","imageUrl","annotated","confidenceColors","WhiteboardLabelingPage","_s","navigate","whiteboard","find","wb","image","annotations","setAnnotations","newAnnotation","setNewAnnotation","dialogOpen","setDialogOpen","activeAnnotation","setActiveAnnotation","transcription","setTranscription","handleMouseDown","e","x","y","target","getStage","getPointerPosition","width","height","confidenceLevel","handleMouseMove","stage","pointerPosition","handleMouseUp","prevAnnotations","handleAnnotationClick","index","map","ann","i","length","handleDialogClose","handleSaveTranscription","maxWidth","style","overflow","display","flexDirection","children","onClick","position","top","left","zIndex","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","variant","transform","opacity","backgroundColor","padding","borderRadius","onMouseDown","onMouseMove","onMouseUp","margin","rect","fill","color","open","onClose","autoFocus","label","fullWidth","value","onChange","_c","$RefreshReg$"],"sources":["/Users/prakashkoukuntla/Goblins-Whiteboard-App/frontend/new-whiteboard-web/src/pages/WhiteboardLabelingPage.js"],"sourcesContent":["// src/pages/WhiteboardLabelingPage.js\nimport React, { useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport {\n  Container,\n  Typography,\n  Button,\n  IconButton,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n} from \"@mui/material\";\nimport { ArrowBack } from \"@mui/icons-material\";\nimport { Stage, Layer, Image as KonvaImage, Rect } from \"react-konva\";\nimport useImage from \"use-image\";\n\nconst whiteboards = [\n  {\n    id: \"wb_456\",\n    imageUrl: \"https://via.placeholder.com/1200x800\",\n    annotated: true,\n  },\n  {\n    id: \"wb_457\",\n    imageUrl: \"https://via.placeholder.com/1200x800\",\n    annotated: false,\n  },\n  {\n    id: \"wb_458\",\n    imageUrl: \"https://via.placeholder.com/1200x800\",\n    annotated: false,\n  },\n];\n\n// Define color states for confidence levels\nconst confidenceColors = [\n  \"rgba(0, 255, 0, 0.5)\",\n  \"rgba(255, 165, 0, 0.5)\",\n  \"rgba(255, 0, 0, 0.5)\",\n];\n\nfunction WhiteboardLabelingPage() {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const whiteboard = whiteboards.find((wb) => wb.id === id);\n  const [image] = useImage(whiteboard ? whiteboard.imageUrl : \"\");\n\n  const [annotations, setAnnotations] = useState([]);\n  const [newAnnotation, setNewAnnotation] = useState(null);\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [activeAnnotation, setActiveAnnotation] = useState(null);\n  const [transcription, setTranscription] = useState(\"\");\n\n  const handleMouseDown = (e) => {\n    const { x, y } = e.target.getStage().getPointerPosition();\n    setNewAnnotation({\n      x,\n      y,\n      width: 0,\n      height: 0,\n      confidenceLevel: 0,\n      transcription: \"\",\n    });\n  };\n\n  const handleMouseMove = (e) => {\n    if (!newAnnotation) return;\n    const stage = e.target.getStage();\n    const pointerPosition = stage.getPointerPosition();\n    setNewAnnotation({\n      ...newAnnotation,\n      width: pointerPosition.x - newAnnotation.x,\n      height: pointerPosition.y - newAnnotation.y,\n    });\n  };\n\n  const handleMouseUp = () => {\n    if (newAnnotation) {\n      setAnnotations((prevAnnotations) => [...prevAnnotations, newAnnotation]);\n      setNewAnnotation(null);\n    }\n  };\n\n  const handleAnnotationClick = (index) => {\n    setAnnotations((prevAnnotations) =>\n      prevAnnotations.map((ann, i) =>\n        i === index\n          ? {\n              ...ann,\n              confidenceLevel:\n                (ann.confidenceLevel + 1) % confidenceColors.length,\n            }\n          : ann\n      )\n    );\n    setActiveAnnotation(index);\n    setTranscription(annotations[index].transcription);\n    setDialogOpen(true);\n  };\n\n  const handleDialogClose = () => {\n    setDialogOpen(false);\n    setActiveAnnotation(null);\n  };\n\n  const handleSaveTranscription = () => {\n    setAnnotations((prevAnnotations) =>\n      prevAnnotations.map((ann, i) =>\n        i === activeAnnotation ? { ...ann, transcription } : ann\n      )\n    );\n    handleDialogClose();\n  };\n\n  return (\n    <Container\n      maxWidth={false}\n      style={{\n        overflow: \"auto\",\n        height: \"100vh\",\n        display: \"flex\",\n        flexDirection: \"column\",\n      }}\n    >\n      {/* Back button */}\n      <IconButton\n        onClick={() => navigate(\"/whiteboards\")}\n        style={{ position: \"fixed\", top: \"20px\", left: \"20px\", zIndex: 1000 }}\n      >\n        <ArrowBack fontSize=\"large\" />\n      </IconButton>\n\n      {/* Whiteboard ID Display */}\n      <Typography\n        variant=\"h6\"\n        style={{\n          position: \"fixed\",\n          top: \"20px\",\n          left: \"50%\",\n          transform: \"translateX(-50%)\",\n          zIndex: 1000,\n          opacity: 0.8,\n          backgroundColor: \"white\",\n          padding: \"5px 15px\",\n          borderRadius: \"4px\",\n        }}\n      >\n        Whiteboard ID: {id}\n      </Typography>\n\n      {whiteboard ? (\n        <Stage\n          width={1200}\n          height={800}\n          onMouseDown={handleMouseDown}\n          onMouseMove={handleMouseMove}\n          onMouseUp={handleMouseUp}\n          style={{ margin: \"0 auto\" }}\n        >\n          <Layer>\n            <KonvaImage image={image} width={1200} height={800} />\n            {annotations.map((rect, i) => (\n              <Rect\n                key={i}\n                x={rect.x}\n                y={rect.y}\n                width={rect.width}\n                height={rect.height}\n                fill={confidenceColors[rect.confidenceLevel]}\n                onClick={() => handleAnnotationClick(i)}\n              />\n            ))}\n            {newAnnotation && (\n              <Rect\n                x={newAnnotation.x}\n                y={newAnnotation.y}\n                width={newAnnotation.width}\n                height={newAnnotation.height}\n                fill=\"rgba(0,0,255,0.5)\"\n              />\n            )}\n          </Layer>\n        </Stage>\n      ) : (\n        <Typography color=\"error\">Whiteboard not found</Typography>\n      )}\n\n      {/* Transcription Dialog */}\n      <Dialog open={dialogOpen} onClose={handleDialogClose}>\n        <DialogTitle>Enter Transcription</DialogTitle>\n        <DialogContent>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            label=\"Transcription\"\n            fullWidth\n            value={transcription}\n            onChange={(e) => setTranscription(e.target.value)}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleDialogClose}>Cancel</Button>\n          <Button onClick={handleSaveTranscription} color=\"primary\">\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Container>\n  );\n}\n\nexport default WhiteboardLabelingPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
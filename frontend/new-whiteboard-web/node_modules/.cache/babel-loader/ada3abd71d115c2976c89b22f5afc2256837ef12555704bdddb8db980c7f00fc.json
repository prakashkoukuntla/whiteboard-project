{"ast":null,"code":"import React,{createContext,useContext,useEffect,useState}from\"react\";import axios from\"axios\";// Create context\nimport{jsx as _jsx}from\"react/jsx-runtime\";const WhiteboardContext=/*#__PURE__*/createContext();// Create a provider component\nexport const WhiteboardProvider=_ref=>{let{children}=_ref;const[whiteboards,setWhiteboards]=useState([]);// Function to fetch whiteboards with user-specific annotation status\nconst refreshWhiteboards=async()=>{try{const whiteboardsRes=await axios.get(\"http://localhost:5001/whiteboards\",{withCredentials:true});const whiteboardsWithStatus=await Promise.all(whiteboardsRes.data.filter(whiteboard=>whiteboard.id!==\"default_id\").map(async whiteboard=>{const annotationsRes=await axios.get(`http://localhost:5001/whiteboards/${whiteboard.id}/annotations`,{withCredentials:true});return{...whiteboard,annotated:annotationsRes.data.length>0};}));setWhiteboards(whiteboardsWithStatus);}catch(error){console.error(\"Error fetching whiteboards with annotations:\",error);}};// Fetch whiteboards initially on context load\nuseEffect(()=>{refreshWhiteboards();},[]);return/*#__PURE__*/_jsx(WhiteboardContext.Provider,{value:{whiteboards,refreshWhiteboards},children:children});};// Custom hook to use the whiteboard context\nexport const useWhiteboard=()=>{return useContext(WhiteboardContext);};","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","axios","jsx","_jsx","WhiteboardContext","WhiteboardProvider","_ref","children","whiteboards","setWhiteboards","refreshWhiteboards","whiteboardsRes","get","withCredentials","whiteboardsWithStatus","Promise","all","data","filter","whiteboard","id","map","annotationsRes","annotated","length","error","console","Provider","value","useWhiteboard"],"sources":["/Users/prakashkoukuntla/Whiteboard-Project/frontend/new-whiteboard-web/src/context/WhiteboardContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\n// Create context\nconst WhiteboardContext = createContext();\n\n// Create a provider component\nexport const WhiteboardProvider = ({ children }) => {\n  const [whiteboards, setWhiteboards] = useState([]);\n\n  // Function to fetch whiteboards with user-specific annotation status\n  const refreshWhiteboards = async () => {\n    try {\n      const whiteboardsRes = await axios.get(\n        \"http://localhost:5001/whiteboards\",\n        {\n          withCredentials: true,\n        }\n      );\n\n      const whiteboardsWithStatus = await Promise.all(\n        whiteboardsRes.data\n          .filter((whiteboard) => whiteboard.id !== \"default_id\")\n          .map(async (whiteboard) => {\n            const annotationsRes = await axios.get(\n              `http://localhost:5001/whiteboards/${whiteboard.id}/annotations`,\n              { withCredentials: true }\n            );\n            return {\n              ...whiteboard,\n              annotated: annotationsRes.data.length > 0,\n            };\n          })\n      );\n\n      setWhiteboards(whiteboardsWithStatus);\n    } catch (error) {\n      console.error(\"Error fetching whiteboards with annotations:\", error);\n    }\n  };\n\n  // Fetch whiteboards initially on context load\n  useEffect(() => {\n    refreshWhiteboards();\n  }, []);\n\n  return (\n    <WhiteboardContext.Provider value={{ whiteboards, refreshWhiteboards }}>\n      {children}\n    </WhiteboardContext.Provider>\n  );\n};\n\n// Custom hook to use the whiteboard context\nexport const useWhiteboard = () => {\n  return useContext(WhiteboardContext);\n};\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAC7E,MAAO,CAAAC,KAAK,KAAM,OAAO,CAEzB;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBACA,KAAM,CAAAC,iBAAiB,cAAGP,aAAa,CAAC,CAAC,CAEzC;AACA,MAAO,MAAM,CAAAQ,kBAAkB,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAC7C,KAAM,CAACE,WAAW,CAAEC,cAAc,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAElD;AACA,KAAM,CAAAU,kBAAkB,CAAG,KAAAA,CAAA,GAAY,CACrC,GAAI,CACF,KAAM,CAAAC,cAAc,CAAG,KAAM,CAAAV,KAAK,CAACW,GAAG,CACpC,mCAAmC,CACnC,CACEC,eAAe,CAAE,IACnB,CACF,CAAC,CAED,KAAM,CAAAC,qBAAqB,CAAG,KAAM,CAAAC,OAAO,CAACC,GAAG,CAC7CL,cAAc,CAACM,IAAI,CAChBC,MAAM,CAAEC,UAAU,EAAKA,UAAU,CAACC,EAAE,GAAK,YAAY,CAAC,CACtDC,GAAG,CAAC,KAAO,CAAAF,UAAU,EAAK,CACzB,KAAM,CAAAG,cAAc,CAAG,KAAM,CAAArB,KAAK,CAACW,GAAG,CACpC,qCAAqCO,UAAU,CAACC,EAAE,cAAc,CAChE,CAAEP,eAAe,CAAE,IAAK,CAC1B,CAAC,CACD,MAAO,CACL,GAAGM,UAAU,CACbI,SAAS,CAAED,cAAc,CAACL,IAAI,CAACO,MAAM,CAAG,CAC1C,CAAC,CACH,CAAC,CACL,CAAC,CAEDf,cAAc,CAACK,qBAAqB,CAAC,CACvC,CAAE,MAAOW,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,8CAA8C,CAAEA,KAAK,CAAC,CACtE,CACF,CAAC,CAED;AACA1B,SAAS,CAAC,IAAM,CACdW,kBAAkB,CAAC,CAAC,CACtB,CAAC,CAAE,EAAE,CAAC,CAEN,mBACEP,IAAA,CAACC,iBAAiB,CAACuB,QAAQ,EAACC,KAAK,CAAE,CAAEpB,WAAW,CAAEE,kBAAmB,CAAE,CAAAH,QAAA,CACpEA,QAAQ,CACiB,CAAC,CAEjC,CAAC,CAED;AACA,MAAO,MAAM,CAAAsB,aAAa,CAAGA,CAAA,GAAM,CACjC,MAAO,CAAA/B,UAAU,CAACM,iBAAiB,CAAC,CACtC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
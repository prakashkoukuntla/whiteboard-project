{"ast":null,"code":"const lodashGet = require('lodash.get');\nconst {\n  setProp,\n  unsetProp\n} = require('../utils');\nfunction getUnwindablePaths(obj, currentPath) {\n  return Object.keys(obj).reduce((unwindablePaths, key) => {\n    const newPath = currentPath ? `${currentPath}.${key}` : key;\n    const value = obj[key];\n    if (typeof value === 'object' && value !== null && !Array.isArray(value) && Object.prototype.toString.call(value.toJSON) !== '[object Function]' && Object.keys(value).length) {\n      unwindablePaths = unwindablePaths.concat(getUnwindablePaths(value, newPath));\n    } else if (Array.isArray(value)) {\n      unwindablePaths.push(newPath);\n      unwindablePaths = unwindablePaths.concat(value.flatMap(arrObj => getUnwindablePaths(arrObj, newPath)).filter((item, index, arr) => arr.indexOf(item) !== index));\n    }\n    return unwindablePaths;\n  }, []);\n}\n\n/**\n * Performs the unwind recursively in specified sequence\n *\n * @param {String[]} unwindPaths The paths as strings to be used to deconstruct the array\n * @returns {Object => Array} Array of objects containing all rows after unwind of chosen paths\n*/\nfunction unwind({\n  paths = undefined,\n  blankOut = false\n} = {}) {\n  function unwindReducer(rows, unwindPath) {\n    return rows.flatMap(row => {\n      const unwindArray = lodashGet(row, unwindPath);\n      if (!Array.isArray(unwindArray)) {\n        return row;\n      }\n      if (!unwindArray.length) {\n        return unsetProp(row, unwindPath);\n      }\n      const baseNewRow = blankOut ? {} : row;\n      const [firstRow, ...restRows] = unwindArray;\n      return [setProp(row, unwindPath, firstRow), ...restRows.map(unwindRow => setProp(baseNewRow, unwindPath, unwindRow))];\n    });\n  }\n  paths = Array.isArray(paths) ? paths : paths ? [paths] : undefined;\n  return dataRow => (paths || getUnwindablePaths(dataRow)).reduce(unwindReducer, [dataRow]);\n}\nmodule.exports = unwind;","map":{"version":3,"names":["lodashGet","require","setProp","unsetProp","getUnwindablePaths","obj","currentPath","Object","keys","reduce","unwindablePaths","key","newPath","value","Array","isArray","prototype","toString","call","toJSON","length","concat","push","flatMap","arrObj","filter","item","index","arr","indexOf","unwind","paths","undefined","blankOut","unwindReducer","rows","unwindPath","row","unwindArray","baseNewRow","firstRow","restRows","map","unwindRow","dataRow","module","exports"],"sources":["/Users/prakashkoukuntla/Goblins-Whiteboard-App/frontend/new-whiteboard-web/node_modules/json2csv/lib/transforms/unwind.js"],"sourcesContent":["\nconst lodashGet = require('lodash.get');\nconst { setProp, unsetProp } = require('../utils');\n\nfunction getUnwindablePaths(obj, currentPath) {\n  return Object.keys(obj).reduce((unwindablePaths, key) => {\n    const newPath = currentPath ? `${currentPath}.${key}` : key;\n    const value = obj[key];\n\n    if (typeof value === 'object'\n      && value !== null\n      && !Array.isArray(value)\n      && Object.prototype.toString.call(value.toJSON) !== '[object Function]'\n      && Object.keys(value).length) {\n      unwindablePaths = unwindablePaths.concat(getUnwindablePaths(value, newPath));\n    } else if (Array.isArray(value)) {\n      unwindablePaths.push(newPath);\n      unwindablePaths = unwindablePaths.concat(value\n        .flatMap(arrObj => getUnwindablePaths(arrObj, newPath))\n        .filter((item, index, arr) => arr.indexOf(item) !== index));\n    }\n\n    return unwindablePaths;\n  }, []);\n}\n\n/**\n * Performs the unwind recursively in specified sequence\n *\n * @param {String[]} unwindPaths The paths as strings to be used to deconstruct the array\n * @returns {Object => Array} Array of objects containing all rows after unwind of chosen paths\n*/\nfunction unwind({ paths = undefined, blankOut = false } = {}) {\n  function unwindReducer(rows, unwindPath) {\n    return rows\n      .flatMap(row => {\n        const unwindArray = lodashGet(row, unwindPath);\n\n        if (!Array.isArray(unwindArray)) {\n          return row;\n        }\n\n        if (!unwindArray.length) {\n          return unsetProp(row, unwindPath);\n        }\n\n        const baseNewRow = blankOut ? {} : row;\n        const [firstRow, ...restRows] = unwindArray;\n        return [\n          setProp(row, unwindPath, firstRow),\n          ...restRows.map(unwindRow => setProp(baseNewRow, unwindPath, unwindRow))\n        ];\n      });\n  }\n\n  paths = Array.isArray(paths) ? paths : (paths ? [paths] : undefined);\n  return dataRow => (paths || getUnwindablePaths(dataRow)).reduce(unwindReducer, [dataRow]);\n}\n\nmodule.exports = unwind;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/prakashkoukuntla/Goblins-Whiteboard-App/frontend/new-whiteboard-web/src/pages/LoginPage.js\",\n  _s = $RefreshSig$();\n// src/pages/LoginPage.js\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { TextField, Button, Container, Typography } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginPage() {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const navigate = useNavigate();\n\n  // Handle form submission\n  const handleLogin = () => {\n    if (username.trim() === \"\") {\n      alert(\"Please enter a username\");\n      return;\n    }\n    // Here you could store the username in context or state if needed\n    navigate(\"/whiteboards\"); // Redirect to the whiteboard selection page\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    style: {\n      marginTop: \"100px\",\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Username\",\n      variant: \"outlined\",\n      fullWidth: true,\n      value: username,\n      onChange: e => setUsername(e.target.value),\n      style: {\n        marginBottom: \"20px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleLogin,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"W5iWavvMWyx8+CZXVdXNt84e954=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useNavigate","TextField","Button","Container","Typography","jsxDEV","_jsxDEV","LoginPage","_s","username","setUsername","navigate","handleLogin","trim","alert","maxWidth","style","marginTop","textAlign","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","label","fullWidth","value","onChange","e","target","marginBottom","color","onClick","_c","$RefreshReg$"],"sources":["/Users/prakashkoukuntla/Goblins-Whiteboard-App/frontend/new-whiteboard-web/src/pages/LoginPage.js"],"sourcesContent":["// src/pages/LoginPage.js\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { TextField, Button, Container, Typography } from \"@mui/material\";\n\nfunction LoginPage() {\n  const [username, setUsername] = useState(\"\");\n  const navigate = useNavigate();\n\n  // Handle form submission\n  const handleLogin = () => {\n    if (username.trim() === \"\") {\n      alert(\"Please enter a username\");\n      return;\n    }\n    // Here you could store the username in context or state if needed\n    navigate(\"/whiteboards\"); // Redirect to the whiteboard selection page\n  };\n\n  return (\n    <Container\n      maxWidth=\"sm\"\n      style={{ marginTop: \"100px\", textAlign: \"center\" }}\n    >\n      <Typography variant=\"h4\" gutterBottom>\n        Login\n      </Typography>\n      <TextField\n        label=\"Username\"\n        variant=\"outlined\"\n        fullWidth\n        value={username}\n        onChange={(e) => setUsername(e.target.value)}\n        style={{ marginBottom: \"20px\" }}\n      />\n      <Button variant=\"contained\" color=\"primary\" onClick={handleLogin}>\n        Login\n      </Button>\n    </Container>\n  );\n}\n\nexport default LoginPage;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,EAAEC,MAAM,EAAEC,SAAS,EAAEC,UAAU,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzE,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMY,QAAQ,GAAGX,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAMY,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIH,QAAQ,CAACI,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC1BC,KAAK,CAAC,yBAAyB,CAAC;MAChC;IACF;IACA;IACAH,QAAQ,CAAC,cAAc,CAAC,CAAC,CAAC;EAC5B,CAAC;EAED,oBACEL,OAAA,CAACH,SAAS;IACRY,QAAQ,EAAC,IAAI;IACbC,KAAK,EAAE;MAAEC,SAAS,EAAE,OAAO;MAAEC,SAAS,EAAE;IAAS,CAAE;IAAAC,QAAA,gBAEnDb,OAAA,CAACF,UAAU;MAACgB,OAAO,EAAC,IAAI;MAACC,YAAY;MAAAF,QAAA,EAAC;IAEtC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACbnB,OAAA,CAACL,SAAS;MACRyB,KAAK,EAAC,UAAU;MAChBN,OAAO,EAAC,UAAU;MAClBO,SAAS;MACTC,KAAK,EAAEnB,QAAS;MAChBoB,QAAQ,EAAGC,CAAC,IAAKpB,WAAW,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC7CZ,KAAK,EAAE;QAAEgB,YAAY,EAAE;MAAO;IAAE;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,eACFnB,OAAA,CAACJ,MAAM;MAACkB,OAAO,EAAC,WAAW;MAACa,KAAK,EAAC,SAAS;MAACC,OAAO,EAAEtB,WAAY;MAAAO,QAAA,EAAC;IAElE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEhB;AAACjB,EAAA,CAnCQD,SAAS;EAAA,QAECP,WAAW;AAAA;AAAAmC,EAAA,GAFrB5B,SAAS;AAqClB,eAAeA,SAAS;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
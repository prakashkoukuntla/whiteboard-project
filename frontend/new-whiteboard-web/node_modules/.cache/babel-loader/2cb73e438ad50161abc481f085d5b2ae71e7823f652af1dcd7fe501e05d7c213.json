{"ast":null,"code":"var _jsxFileName = \"/Users/prakashkoukuntla/Goblins-Whiteboard-App/frontend/new-whiteboard-web/src/pages/WhiteboardLabelingPage.js\",\n  _s = $RefreshSig$();\n// src/pages/WhiteboardLabelingPage.js\nimport React, { useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport SplitPane from \"react-split-pane\";\nimport { Container, Typography, Button, IconButton, TextField, Paper } from \"@mui/material\";\nimport { ArrowBack } from \"@mui/icons-material\";\nimport { Stage, Layer, Image as KonvaImage, Rect } from \"react-konva\";\nimport useImage from \"use-image\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst whiteboards = [{\n  id: \"wb_456\",\n  imageUrl: \"https://via.placeholder.com/1200x800\",\n  annotated: true\n}, {\n  id: \"wb_457\",\n  imageUrl: \"https://via.placeholder.com/1200x800\",\n  annotated: false\n}, {\n  id: \"wb_458\",\n  imageUrl: \"https://via.placeholder.com/1200x800\",\n  annotated: false\n}];\nconst confidenceColors = [\"rgba(0, 255, 0, 0.5)\", \"rgba(255, 165, 0, 0.5)\", \"rgba(255, 0, 0, 0.5)\"];\nfunction WhiteboardLabelingPage() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const whiteboard = whiteboards.find(wb => wb.id === id);\n  const [image] = useImage(whiteboard ? whiteboard.imageUrl : \"\");\n  const [annotations, setAnnotations] = useState([]);\n  const [newAnnotation, setNewAnnotation] = useState(null);\n  const [activeAnnotation, setActiveAnnotation] = useState(null);\n  const [transcription, setTranscription] = useState(\"\");\n  const handleMouseDown = e => {\n    const {\n      x,\n      y\n    } = e.target.getStage().getPointerPosition();\n    setNewAnnotation({\n      x,\n      y,\n      width: 0,\n      height: 0,\n      confidenceLevel: 0,\n      transcription: \"\"\n    });\n  };\n  const handleMouseMove = e => {\n    if (!newAnnotation) return;\n    const stage = e.target.getStage();\n    const pointerPosition = stage.getPointerPosition();\n    setNewAnnotation({\n      ...newAnnotation,\n      width: pointerPosition.x - newAnnotation.x,\n      height: pointerPosition.y - newAnnotation.y\n    });\n  };\n  const handleMouseUp = () => {\n    if (newAnnotation) {\n      setAnnotations(prevAnnotations => [...prevAnnotations, newAnnotation]);\n      setNewAnnotation(null);\n    }\n  };\n  const handleAnnotationClick = index => {\n    const selectedAnnotation = annotations[index];\n    setActiveAnnotation(index);\n    setTranscription(selectedAnnotation.transcription);\n  };\n  const handleSaveTranscription = () => {\n    setAnnotations(prevAnnotations => prevAnnotations.map((ann, i) => i === activeAnnotation ? {\n      ...ann,\n      transcription\n    } : ann));\n    setActiveAnnotation(null);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: false,\n    style: {\n      height: \"100vh\",\n      padding: 0\n    },\n    children: /*#__PURE__*/_jsxDEV(SplitPane, {\n      split: \"vertical\",\n      defaultSize: \"70%\",\n      minSize: 500,\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: false,\n        style: {\n          overflowY: \"auto\",\n          position: \"relative\",\n          padding: \"20px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: () => navigate(\"/whiteboards\"),\n          style: {\n            position: \"absolute\",\n            top: \"20px\",\n            left: \"20px\",\n            zIndex: 1000\n          },\n          children: /*#__PURE__*/_jsxDEV(ArrowBack, {\n            fontSize: \"large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          style: {\n            position: \"absolute\",\n            top: \"20px\",\n            left: \"50%\",\n            transform: \"translateX(-50%)\",\n            zIndex: 1000,\n            opacity: 0.8,\n            backgroundColor: \"white\",\n            padding: \"5px 15px\",\n            borderRadius: \"4px\"\n          },\n          children: [\"Whiteboard ID: \", id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), whiteboard ? /*#__PURE__*/_jsxDEV(Stage, {\n          width: 1200,\n          height: 800,\n          onMouseDown: handleMouseDown,\n          onMouseMove: handleMouseMove,\n          onMouseUp: handleMouseUp,\n          style: {\n            margin: \"0 auto\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Layer, {\n            children: [/*#__PURE__*/_jsxDEV(KonvaImage, {\n              image: image,\n              width: 1200,\n              height: 800\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, this), annotations.map((rect, i) => /*#__PURE__*/_jsxDEV(Rect, {\n              x: rect.x,\n              y: rect.y,\n              width: rect.width,\n              height: rect.height,\n              fill: confidenceColors[rect.confidenceLevel],\n              onClick: () => handleAnnotationClick(i)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 19\n            }, this)), newAnnotation && /*#__PURE__*/_jsxDEV(Rect, {\n              x: newAnnotation.x,\n              y: newAnnotation.y,\n              width: newAnnotation.width,\n              height: newAnnotation.height,\n              fill: \"rgba(0,0,255,0.5)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"error\",\n          children: \"Whiteboard not found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), activeAnnotation !== null && /*#__PURE__*/_jsxDEV(Paper, {\n        style: {\n          height: \"100%\",\n          padding: \"20px\",\n          overflowY: \"auto\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"flex-start\",\n          boxShadow: \"0px 4px 12px rgba(0,0,0,0.2)\"\n        },\n        square: true,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Edit Transcription\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Transcription\",\n          value: transcription,\n          onChange: e => setTranscription(e.target.value),\n          multiline: true,\n          rows: 4,\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleSaveTranscription,\n          style: {\n            marginTop: \"10px\"\n          },\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n_s(WhiteboardLabelingPage, \"nW61ftoCuy8eFleky8FLhDzGMFI=\", false, function () {\n  return [useParams, useNavigate, useImage];\n});\n_c = WhiteboardLabelingPage;\nexport default WhiteboardLabelingPage;\nvar _c;\n$RefreshReg$(_c, \"WhiteboardLabelingPage\");","map":{"version":3,"names":["React","useState","useParams","useNavigate","SplitPane","Container","Typography","Button","IconButton","TextField","Paper","ArrowBack","Stage","Layer","Image","KonvaImage","Rect","useImage","jsxDEV","_jsxDEV","whiteboards","id","imageUrl","annotated","confidenceColors","WhiteboardLabelingPage","_s","navigate","whiteboard","find","wb","image","annotations","setAnnotations","newAnnotation","setNewAnnotation","activeAnnotation","setActiveAnnotation","transcription","setTranscription","handleMouseDown","e","x","y","target","getStage","getPointerPosition","width","height","confidenceLevel","handleMouseMove","stage","pointerPosition","handleMouseUp","prevAnnotations","handleAnnotationClick","index","selectedAnnotation","handleSaveTranscription","map","ann","i","maxWidth","style","padding","children","split","defaultSize","minSize","overflowY","position","onClick","top","left","zIndex","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","variant","transform","opacity","backgroundColor","borderRadius","onMouseDown","onMouseMove","onMouseUp","margin","rect","fill","color","display","flexDirection","alignItems","boxShadow","square","gutterBottom","fullWidth","label","value","onChange","multiline","rows","marginTop","_c","$RefreshReg$"],"sources":["/Users/prakashkoukuntla/Goblins-Whiteboard-App/frontend/new-whiteboard-web/src/pages/WhiteboardLabelingPage.js"],"sourcesContent":["// src/pages/WhiteboardLabelingPage.js\nimport React, { useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport SplitPane from \"react-split-pane\";\nimport {\n  Container,\n  Typography,\n  Button,\n  IconButton,\n  TextField,\n  Paper,\n} from \"@mui/material\";\nimport { ArrowBack } from \"@mui/icons-material\";\nimport { Stage, Layer, Image as KonvaImage, Rect } from \"react-konva\";\nimport useImage from \"use-image\";\n\nconst whiteboards = [\n  {\n    id: \"wb_456\",\n    imageUrl: \"https://via.placeholder.com/1200x800\",\n    annotated: true,\n  },\n  {\n    id: \"wb_457\",\n    imageUrl: \"https://via.placeholder.com/1200x800\",\n    annotated: false,\n  },\n  {\n    id: \"wb_458\",\n    imageUrl: \"https://via.placeholder.com/1200x800\",\n    annotated: false,\n  },\n];\n\nconst confidenceColors = [\n  \"rgba(0, 255, 0, 0.5)\",\n  \"rgba(255, 165, 0, 0.5)\",\n  \"rgba(255, 0, 0, 0.5)\",\n];\n\nfunction WhiteboardLabelingPage() {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const whiteboard = whiteboards.find((wb) => wb.id === id);\n  const [image] = useImage(whiteboard ? whiteboard.imageUrl : \"\");\n\n  const [annotations, setAnnotations] = useState([]);\n  const [newAnnotation, setNewAnnotation] = useState(null);\n  const [activeAnnotation, setActiveAnnotation] = useState(null);\n  const [transcription, setTranscription] = useState(\"\");\n\n  const handleMouseDown = (e) => {\n    const { x, y } = e.target.getStage().getPointerPosition();\n    setNewAnnotation({\n      x,\n      y,\n      width: 0,\n      height: 0,\n      confidenceLevel: 0,\n      transcription: \"\",\n    });\n  };\n\n  const handleMouseMove = (e) => {\n    if (!newAnnotation) return;\n    const stage = e.target.getStage();\n    const pointerPosition = stage.getPointerPosition();\n    setNewAnnotation({\n      ...newAnnotation,\n      width: pointerPosition.x - newAnnotation.x,\n      height: pointerPosition.y - newAnnotation.y,\n    });\n  };\n\n  const handleMouseUp = () => {\n    if (newAnnotation) {\n      setAnnotations((prevAnnotations) => [...prevAnnotations, newAnnotation]);\n      setNewAnnotation(null);\n    }\n  };\n\n  const handleAnnotationClick = (index) => {\n    const selectedAnnotation = annotations[index];\n    setActiveAnnotation(index);\n    setTranscription(selectedAnnotation.transcription);\n  };\n\n  const handleSaveTranscription = () => {\n    setAnnotations((prevAnnotations) =>\n      prevAnnotations.map((ann, i) =>\n        i === activeAnnotation ? { ...ann, transcription } : ann\n      )\n    );\n    setActiveAnnotation(null);\n  };\n\n  return (\n    <Container maxWidth={false} style={{ height: \"100vh\", padding: 0 }}>\n      {/* Split Pane */}\n      <SplitPane split=\"vertical\" defaultSize=\"70%\" minSize={500}>\n        {/* Whiteboard Section */}\n        <Container\n          maxWidth={false}\n          style={{\n            overflowY: \"auto\",\n            position: \"relative\",\n            padding: \"20px\",\n          }}\n        >\n          {/* Back button */}\n          <IconButton\n            onClick={() => navigate(\"/whiteboards\")}\n            style={{\n              position: \"absolute\",\n              top: \"20px\",\n              left: \"20px\",\n              zIndex: 1000,\n            }}\n          >\n            <ArrowBack fontSize=\"large\" />\n          </IconButton>\n\n          {/* Whiteboard ID Display */}\n          <Typography\n            variant=\"h6\"\n            style={{\n              position: \"absolute\",\n              top: \"20px\",\n              left: \"50%\",\n              transform: \"translateX(-50%)\",\n              zIndex: 1000,\n              opacity: 0.8,\n              backgroundColor: \"white\",\n              padding: \"5px 15px\",\n              borderRadius: \"4px\",\n            }}\n          >\n            Whiteboard ID: {id}\n          </Typography>\n\n          {whiteboard ? (\n            <Stage\n              width={1200}\n              height={800}\n              onMouseDown={handleMouseDown}\n              onMouseMove={handleMouseMove}\n              onMouseUp={handleMouseUp}\n              style={{ margin: \"0 auto\" }}\n            >\n              <Layer>\n                <KonvaImage image={image} width={1200} height={800} />\n                {annotations.map((rect, i) => (\n                  <Rect\n                    key={i}\n                    x={rect.x}\n                    y={rect.y}\n                    width={rect.width}\n                    height={rect.height}\n                    fill={confidenceColors[rect.confidenceLevel]}\n                    onClick={() => handleAnnotationClick(i)}\n                  />\n                ))}\n                {newAnnotation && (\n                  <Rect\n                    x={newAnnotation.x}\n                    y={newAnnotation.y}\n                    width={newAnnotation.width}\n                    height={newAnnotation.height}\n                    fill=\"rgba(0,0,255,0.5)\"\n                  />\n                )}\n              </Layer>\n            </Stage>\n          ) : (\n            <Typography color=\"error\">Whiteboard not found</Typography>\n          )}\n        </Container>\n\n        {/* Transcription Panel */}\n        {activeAnnotation !== null && (\n          <Paper\n            style={{\n              height: \"100%\",\n              padding: \"20px\",\n              overflowY: \"auto\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"flex-start\",\n              boxShadow: \"0px 4px 12px rgba(0,0,0,0.2)\",\n            }}\n            square\n          >\n            <Typography variant=\"h6\" gutterBottom>\n              Edit Transcription\n            </Typography>\n            <TextField\n              fullWidth\n              label=\"Transcription\"\n              value={transcription}\n              onChange={(e) => setTranscription(e.target.value)}\n              multiline\n              rows={4}\n              variant=\"outlined\"\n            />\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={handleSaveTranscription}\n              style={{ marginTop: \"10px\" }}\n            >\n              Save\n            </Button>\n          </Paper>\n        )}\n      </SplitPane>\n    </Container>\n  );\n}\n\nexport default WhiteboardLabelingPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
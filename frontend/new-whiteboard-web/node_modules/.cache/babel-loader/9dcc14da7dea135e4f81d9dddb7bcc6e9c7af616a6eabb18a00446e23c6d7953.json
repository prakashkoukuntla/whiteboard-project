{"ast":null,"code":"var _jsxFileName = \"/Users/prakashkoukuntla/Goblins-Whiteboard-App/frontend/new-whiteboard-web/src/context/WhiteboardContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/context/WhiteboardContext.js\nimport React, { createContext, useContext, useState } from \"react\";\n\n// Create context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WhiteboardContext = /*#__PURE__*/createContext();\n\n// Create a provider component\nexport const WhiteboardProvider = ({\n  children\n}) => {\n  _s();\n  const [whiteboards, setWhiteboards] = useState([]);\n  return /*#__PURE__*/_jsxDEV(WhiteboardContext.Provider, {\n    value: {\n      whiteboards,\n      setWhiteboards\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use the whiteboard context\n_s(WhiteboardProvider, \"ipOykvsomF4agEpi0z8RynDFu9E=\");\n_c = WhiteboardProvider;\nexport const useWhiteboard = () => {\n  _s2();\n  return useContext(WhiteboardContext);\n};\n_s2(useWhiteboard, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"WhiteboardProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","WhiteboardContext","WhiteboardProvider","children","_s","whiteboards","setWhiteboards","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useWhiteboard","_s2","$RefreshReg$"],"sources":["/Users/prakashkoukuntla/Goblins-Whiteboard-App/frontend/new-whiteboard-web/src/context/WhiteboardContext.js"],"sourcesContent":["// src/context/WhiteboardContext.js\nimport React, { createContext, useContext, useState } from \"react\";\n\n// Create context\nconst WhiteboardContext = createContext();\n\n// Create a provider component\nexport const WhiteboardProvider = ({ children }) => {\n  const [whiteboards, setWhiteboards] = useState([]);\n\n  return (\n    <WhiteboardContext.Provider value={{ whiteboards, setWhiteboards }}>\n      {children}\n    </WhiteboardContext.Provider>\n  );\n};\n\n// Custom hook to use the whiteboard context\nexport const useWhiteboard = () => {\n  return useContext(WhiteboardContext);\n};\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;;AAElE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,iBAAiB,gBAAGL,aAAa,CAAC,CAAC;;AAEzC;AACA,OAAO,MAAMM,kBAAkB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAClD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAElD,oBACEE,OAAA,CAACC,iBAAiB,CAACM,QAAQ;IAACC,KAAK,EAAE;MAAEH,WAAW;MAAEC;IAAe,CAAE;IAAAH,QAAA,EAChEA;EAAQ;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACiB,CAAC;AAEjC,CAAC;;AAED;AAAAR,EAAA,CAVaF,kBAAkB;AAAAW,EAAA,GAAlBX,kBAAkB;AAW/B,OAAO,MAAMY,aAAa,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACjC,OAAOlB,UAAU,CAACI,iBAAiB,CAAC;AACtC,CAAC;AAACc,GAAA,CAFWD,aAAa;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
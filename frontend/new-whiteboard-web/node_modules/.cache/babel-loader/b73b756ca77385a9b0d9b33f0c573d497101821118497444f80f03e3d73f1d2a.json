{"ast":null,"code":"var _jsxFileName = \"/Users/prakashkoukuntla/Goblins-Whiteboard-App/frontend/new-whiteboard-web/src/pages/WhiteboardLabelingPage.js\",\n  _s = $RefreshSig$();\n// src/pages/WhiteboardLabelingPage.js\nimport React, { useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { Container, Typography, Button, IconButton, TextField, Paper } from \"@mui/material\";\nimport { ArrowBack } from \"@mui/icons-material\";\nimport { Stage, Layer, Image as KonvaImage, Rect } from \"react-konva\";\nimport useImage from \"use-image\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst whiteboards = [{\n  id: \"wb_456\",\n  imageUrl: \"https://via.placeholder.com/1200x800\",\n  annotated: true\n}, {\n  id: \"wb_457\",\n  imageUrl: \"https://via.placeholder.com/1200x800\",\n  annotated: false\n}, {\n  id: \"wb_458\",\n  imageUrl: \"https://via.placeholder.com/1200x800\",\n  annotated: false\n}];\nconst confidenceColors = [\"rgba(0, 255, 0, 0.5)\", \"rgba(255, 165, 0, 0.5)\", \"rgba(255, 0, 0, 0.5)\"];\nfunction WhiteboardLabelingPage() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const whiteboard = whiteboards.find(wb => wb.id === id);\n  const [image] = useImage(whiteboard ? whiteboard.imageUrl : \"\");\n  const [annotations, setAnnotations] = useState([]);\n  const [newAnnotation, setNewAnnotation] = useState(null);\n  const [activeAnnotation, setActiveAnnotation] = useState(null);\n  const [transcription, setTranscription] = useState(\"\");\n  const handleMouseDown = e => {\n    const {\n      x,\n      y\n    } = e.target.getStage().getPointerPosition();\n    setNewAnnotation({\n      x,\n      y,\n      width: 0,\n      height: 0,\n      confidenceLevel: 0,\n      transcription: \"\"\n    });\n  };\n  const handleMouseMove = e => {\n    if (!newAnnotation) return;\n    const stage = e.target.getStage();\n    const pointerPosition = stage.getPointerPosition();\n    setNewAnnotation({\n      ...newAnnotation,\n      width: pointerPosition.x - newAnnotation.x,\n      height: pointerPosition.y - newAnnotation.y\n    });\n  };\n  const handleMouseUp = () => {\n    if (newAnnotation) {\n      setAnnotations(prevAnnotations => [...prevAnnotations, newAnnotation]);\n      setNewAnnotation(null);\n    }\n  };\n  const handleAnnotationClick = index => {\n    const selectedAnnotation = annotations[index];\n    setActiveAnnotation(index);\n    setTranscription(selectedAnnotation.transcription);\n  };\n  const handleSaveTranscription = () => {\n    setAnnotations(prevAnnotations => prevAnnotations.map((ann, i) => i === activeAnnotation ? {\n      ...ann,\n      transcription\n    } : ann));\n    setActiveAnnotation(null);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: false,\n    style: {\n      display: \"flex\",\n      height: \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: false,\n      style: {\n        flex: 1,\n        overflow: \"auto\",\n        position: \"relative\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: () => navigate(\"/whiteboards\"),\n        style: {\n          position: \"absolute\",\n          top: \"20px\",\n          left: \"20px\",\n          zIndex: 1000\n        },\n        children: /*#__PURE__*/_jsxDEV(ArrowBack, {\n          fontSize: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        style: {\n          position: \"absolute\",\n          top: \"20px\",\n          left: \"50%\",\n          transform: \"translateX(-50%)\",\n          zIndex: 1000,\n          opacity: 0.8,\n          backgroundColor: \"white\",\n          padding: \"5px 15px\",\n          borderRadius: \"4px\"\n        },\n        children: [\"Whiteboard ID: \", id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), whiteboard ? /*#__PURE__*/_jsxDEV(Stage, {\n        width: 1200,\n        height: 800,\n        onMouseDown: handleMouseDown,\n        onMouseMove: handleMouseMove,\n        onMouseUp: handleMouseUp,\n        style: {\n          margin: \"0 auto\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Layer, {\n          children: [/*#__PURE__*/_jsxDEV(KonvaImage, {\n            image: image,\n            width: 1200,\n            height: 800\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this), annotations.map((rect, i) => /*#__PURE__*/_jsxDEV(Rect, {\n            x: rect.x,\n            y: rect.y,\n            width: rect.width,\n            height: rect.height,\n            fill: confidenceColors[rect.confidenceLevel],\n            onClick: () => handleAnnotationClick(i)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 17\n          }, this)), newAnnotation && /*#__PURE__*/_jsxDEV(Rect, {\n            x: newAnnotation.x,\n            y: newAnnotation.y,\n            width: newAnnotation.width,\n            height: newAnnotation.height,\n            fill: \"rgba(0,0,255,0.5)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        children: \"Whiteboard not found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), activeAnnotation !== null && /*#__PURE__*/_jsxDEV(Paper, {\n      style: {\n        width: \"300px\",\n        padding: \"20px\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"flex-start\",\n        boxShadow: \"0px 4px 12px rgba(0,0,0,0.2)\",\n        overflowY: \"auto\"\n      },\n      square: true,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Edit Transcription\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        label: \"Transcription\",\n        value: transcription,\n        onChange: e => setTranscription(e.target.value),\n        multiline: true,\n        rows: 4,\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleSaveTranscription,\n        style: {\n          marginTop: \"10px\"\n        },\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n_s(WhiteboardLabelingPage, \"nW61ftoCuy8eFleky8FLhDzGMFI=\", false, function () {\n  return [useParams, useNavigate, useImage];\n});\n_c = WhiteboardLabelingPage;\nexport default WhiteboardLabelingPage;\nvar _c;\n$RefreshReg$(_c, \"WhiteboardLabelingPage\");","map":{"version":3,"names":["React","useState","useParams","useNavigate","Container","Typography","Button","IconButton","TextField","Paper","ArrowBack","Stage","Layer","Image","KonvaImage","Rect","useImage","jsxDEV","_jsxDEV","whiteboards","id","imageUrl","annotated","confidenceColors","WhiteboardLabelingPage","_s","navigate","whiteboard","find","wb","image","annotations","setAnnotations","newAnnotation","setNewAnnotation","activeAnnotation","setActiveAnnotation","transcription","setTranscription","handleMouseDown","e","x","y","target","getStage","getPointerPosition","width","height","confidenceLevel","handleMouseMove","stage","pointerPosition","handleMouseUp","prevAnnotations","handleAnnotationClick","index","selectedAnnotation","handleSaveTranscription","map","ann","i","maxWidth","style","display","children","flex","overflow","position","onClick","top","left","zIndex","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","variant","transform","opacity","backgroundColor","padding","borderRadius","onMouseDown","onMouseMove","onMouseUp","margin","rect","fill","color","flexDirection","alignItems","boxShadow","overflowY","square","gutterBottom","fullWidth","label","value","onChange","multiline","rows","marginTop","_c","$RefreshReg$"],"sources":["/Users/prakashkoukuntla/Goblins-Whiteboard-App/frontend/new-whiteboard-web/src/pages/WhiteboardLabelingPage.js"],"sourcesContent":["// src/pages/WhiteboardLabelingPage.js\nimport React, { useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport {\n  Container,\n  Typography,\n  Button,\n  IconButton,\n  TextField,\n  Paper,\n} from \"@mui/material\";\nimport { ArrowBack } from \"@mui/icons-material\";\nimport { Stage, Layer, Image as KonvaImage, Rect } from \"react-konva\";\nimport useImage from \"use-image\";\n\nconst whiteboards = [\n  {\n    id: \"wb_456\",\n    imageUrl: \"https://via.placeholder.com/1200x800\",\n    annotated: true,\n  },\n  {\n    id: \"wb_457\",\n    imageUrl: \"https://via.placeholder.com/1200x800\",\n    annotated: false,\n  },\n  {\n    id: \"wb_458\",\n    imageUrl: \"https://via.placeholder.com/1200x800\",\n    annotated: false,\n  },\n];\n\nconst confidenceColors = [\n  \"rgba(0, 255, 0, 0.5)\",\n  \"rgba(255, 165, 0, 0.5)\",\n  \"rgba(255, 0, 0, 0.5)\",\n];\n\nfunction WhiteboardLabelingPage() {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const whiteboard = whiteboards.find((wb) => wb.id === id);\n  const [image] = useImage(whiteboard ? whiteboard.imageUrl : \"\");\n\n  const [annotations, setAnnotations] = useState([]);\n  const [newAnnotation, setNewAnnotation] = useState(null);\n  const [activeAnnotation, setActiveAnnotation] = useState(null);\n  const [transcription, setTranscription] = useState(\"\");\n\n  const handleMouseDown = (e) => {\n    const { x, y } = e.target.getStage().getPointerPosition();\n    setNewAnnotation({\n      x,\n      y,\n      width: 0,\n      height: 0,\n      confidenceLevel: 0,\n      transcription: \"\",\n    });\n  };\n\n  const handleMouseMove = (e) => {\n    if (!newAnnotation) return;\n    const stage = e.target.getStage();\n    const pointerPosition = stage.getPointerPosition();\n    setNewAnnotation({\n      ...newAnnotation,\n      width: pointerPosition.x - newAnnotation.x,\n      height: pointerPosition.y - newAnnotation.y,\n    });\n  };\n\n  const handleMouseUp = () => {\n    if (newAnnotation) {\n      setAnnotations((prevAnnotations) => [...prevAnnotations, newAnnotation]);\n      setNewAnnotation(null);\n    }\n  };\n\n  const handleAnnotationClick = (index) => {\n    const selectedAnnotation = annotations[index];\n    setActiveAnnotation(index);\n    setTranscription(selectedAnnotation.transcription);\n  };\n\n  const handleSaveTranscription = () => {\n    setAnnotations((prevAnnotations) =>\n      prevAnnotations.map((ann, i) =>\n        i === activeAnnotation ? { ...ann, transcription } : ann\n      )\n    );\n    setActiveAnnotation(null);\n  };\n\n  return (\n    <Container\n      maxWidth={false}\n      style={{\n        display: \"flex\",\n        height: \"100vh\",\n      }}\n    >\n      {/* Whiteboard Section */}\n      <Container\n        maxWidth={false}\n        style={{\n          flex: 1,\n          overflow: \"auto\",\n          position: \"relative\",\n        }}\n      >\n        {/* Back button */}\n        <IconButton\n          onClick={() => navigate(\"/whiteboards\")}\n          style={{\n            position: \"absolute\",\n            top: \"20px\",\n            left: \"20px\",\n            zIndex: 1000,\n          }}\n        >\n          <ArrowBack fontSize=\"large\" />\n        </IconButton>\n\n        {/* Whiteboard ID Display */}\n        <Typography\n          variant=\"h6\"\n          style={{\n            position: \"absolute\",\n            top: \"20px\",\n            left: \"50%\",\n            transform: \"translateX(-50%)\",\n            zIndex: 1000,\n            opacity: 0.8,\n            backgroundColor: \"white\",\n            padding: \"5px 15px\",\n            borderRadius: \"4px\",\n          }}\n        >\n          Whiteboard ID: {id}\n        </Typography>\n\n        {whiteboard ? (\n          <Stage\n            width={1200}\n            height={800}\n            onMouseDown={handleMouseDown}\n            onMouseMove={handleMouseMove}\n            onMouseUp={handleMouseUp}\n            style={{ margin: \"0 auto\" }}\n          >\n            <Layer>\n              <KonvaImage image={image} width={1200} height={800} />\n              {annotations.map((rect, i) => (\n                <Rect\n                  key={i}\n                  x={rect.x}\n                  y={rect.y}\n                  width={rect.width}\n                  height={rect.height}\n                  fill={confidenceColors[rect.confidenceLevel]}\n                  onClick={() => handleAnnotationClick(i)}\n                />\n              ))}\n              {newAnnotation && (\n                <Rect\n                  x={newAnnotation.x}\n                  y={newAnnotation.y}\n                  width={newAnnotation.width}\n                  height={newAnnotation.height}\n                  fill=\"rgba(0,0,255,0.5)\"\n                />\n              )}\n            </Layer>\n          </Stage>\n        ) : (\n          <Typography color=\"error\">Whiteboard not found</Typography>\n        )}\n      </Container>\n\n      {/* Transcription Panel */}\n      {activeAnnotation !== null && (\n        <Paper\n          style={{\n            width: \"300px\",\n            padding: \"20px\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"flex-start\",\n            boxShadow: \"0px 4px 12px rgba(0,0,0,0.2)\",\n            overflowY: \"auto\",\n          }}\n          square\n        >\n          <Typography variant=\"h6\" gutterBottom>\n            Edit Transcription\n          </Typography>\n          <TextField\n            fullWidth\n            label=\"Transcription\"\n            value={transcription}\n            onChange={(e) => setTranscription(e.target.value)}\n            multiline\n            rows={4}\n            variant=\"outlined\"\n          />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleSaveTranscription}\n            style={{ marginTop: \"10px\" }}\n          >\n            Save\n          </Button>\n        </Paper>\n      )}\n    </Container>\n  );\n}\n\nexport default WhiteboardLabelingPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/prakashkoukuntla/Goblins-Whiteboard-App/frontend/new-whiteboard-web/src/pages/LoginPage.js\",\n  _s = $RefreshSig$();\n// src/pages/LoginPage.js\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { TextField, Button, Container, Typography } from \"@mui/material\";\nimport axios from \"axios\";\nimport { useWhiteboard } from \"../context/WhiteboardContext\"; // Import context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginPage() {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const {\n    refreshWhiteboards\n  } = useWhiteboard(); // Access the setWhiteboards function from context\n  const navigate = useNavigate();\n  const handleLogin = async () => {\n    if (username.trim() === \"\") {\n      alert(\"Please enter a username\");\n      return;\n    }\n    try {\n      const response = await axios.post(\"http://localhost:5001/login\", {\n        name: username\n      }, {\n        withCredentials: true\n      });\n      if (response.status === 200) {\n        console.log(response.data.message);\n        const whiteboards = response.data.whiteboards;\n        refreshWhiteboards(whiteboards); // Store whiteboards in context\n\n        navigate(\"/whiteboards\");\n      }\n    } catch (error) {\n      console.error(\"Login failed\", error);\n      alert(\"Login failed, please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    style: {\n      marginTop: \"100px\",\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Username\",\n      variant: \"outlined\",\n      fullWidth: true,\n      value: username,\n      onChange: e => setUsername(e.target.value),\n      style: {\n        marginBottom: \"20px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleLogin,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"o6qnPzD9iuMDXMoN4D3NdhBP0JE=\", false, function () {\n  return [useWhiteboard, useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useNavigate","TextField","Button","Container","Typography","axios","useWhiteboard","jsxDEV","_jsxDEV","LoginPage","_s","username","setUsername","refreshWhiteboards","navigate","handleLogin","trim","alert","response","post","name","withCredentials","status","console","log","data","message","whiteboards","error","maxWidth","style","marginTop","textAlign","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","label","fullWidth","value","onChange","e","target","marginBottom","color","onClick","_c","$RefreshReg$"],"sources":["/Users/prakashkoukuntla/Goblins-Whiteboard-App/frontend/new-whiteboard-web/src/pages/LoginPage.js"],"sourcesContent":["// src/pages/LoginPage.js\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { TextField, Button, Container, Typography } from \"@mui/material\";\nimport axios from \"axios\";\nimport { useWhiteboard } from \"../context/WhiteboardContext\"; // Import context\n\nfunction LoginPage() {\n  const [username, setUsername] = useState(\"\");\n  const { refreshWhiteboards } = useWhiteboard(); // Access the setWhiteboards function from context\n  const navigate = useNavigate();\n\n  const handleLogin = async () => {\n    if (username.trim() === \"\") {\n      alert(\"Please enter a username\");\n      return;\n    }\n\n    try {\n      const response = await axios.post(\n        \"http://localhost:5001/login\",\n        {\n          name: username,\n        },\n        { withCredentials: true }\n      );\n\n      if (response.status === 200) {\n        console.log(response.data.message);\n        const whiteboards = response.data.whiteboards;\n        refreshWhiteboards(whiteboards); // Store whiteboards in context\n\n        navigate(\"/whiteboards\");\n      }\n    } catch (error) {\n      console.error(\"Login failed\", error);\n      alert(\"Login failed, please try again.\");\n    }\n  };\n\n  return (\n    <Container\n      maxWidth=\"sm\"\n      style={{ marginTop: \"100px\", textAlign: \"center\" }}\n    >\n      <Typography variant=\"h4\" gutterBottom>\n        Login\n      </Typography>\n      <TextField\n        label=\"Username\"\n        variant=\"outlined\"\n        fullWidth\n        value={username}\n        onChange={(e) => setUsername(e.target.value)}\n        style={{ marginBottom: \"20px\" }}\n      />\n      <Button variant=\"contained\" color=\"primary\" onClick={handleLogin}>\n        Login\n      </Button>\n    </Container>\n  );\n}\n\nexport default LoginPage;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,EAAEC,MAAM,EAAEC,SAAS,EAAEC,UAAU,QAAQ,eAAe;AACxE,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,QAAQ,8BAA8B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9D,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM;IAAEc;EAAmB,CAAC,GAAGP,aAAa,CAAC,CAAC,CAAC,CAAC;EAChD,MAAMQ,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAE9B,MAAMe,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAIJ,QAAQ,CAACK,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC1BC,KAAK,CAAC,yBAAyB,CAAC;MAChC;IACF;IAEA,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,IAAI,CAC/B,6BAA6B,EAC7B;QACEC,IAAI,EAAET;MACR,CAAC,EACD;QAAEU,eAAe,EAAE;MAAK,CAC1B,CAAC;MAED,IAAIH,QAAQ,CAACI,MAAM,KAAK,GAAG,EAAE;QAC3BC,OAAO,CAACC,GAAG,CAACN,QAAQ,CAACO,IAAI,CAACC,OAAO,CAAC;QAClC,MAAMC,WAAW,GAAGT,QAAQ,CAACO,IAAI,CAACE,WAAW;QAC7Cd,kBAAkB,CAACc,WAAW,CAAC,CAAC,CAAC;;QAEjCb,QAAQ,CAAC,cAAc,CAAC;MAC1B;IACF,CAAC,CAAC,OAAOc,KAAK,EAAE;MACdL,OAAO,CAACK,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACpCX,KAAK,CAAC,iCAAiC,CAAC;IAC1C;EACF,CAAC;EAED,oBACET,OAAA,CAACL,SAAS;IACR0B,QAAQ,EAAC,IAAI;IACbC,KAAK,EAAE;MAAEC,SAAS,EAAE,OAAO;MAAEC,SAAS,EAAE;IAAS,CAAE;IAAAC,QAAA,gBAEnDzB,OAAA,CAACJ,UAAU;MAAC8B,OAAO,EAAC,IAAI;MAACC,YAAY;MAAAF,QAAA,EAAC;IAEtC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACb/B,OAAA,CAACP,SAAS;MACRuC,KAAK,EAAC,UAAU;MAChBN,OAAO,EAAC,UAAU;MAClBO,SAAS;MACTC,KAAK,EAAE/B,QAAS;MAChBgC,QAAQ,EAAGC,CAAC,IAAKhC,WAAW,CAACgC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC7CZ,KAAK,EAAE;QAAEgB,YAAY,EAAE;MAAO;IAAE;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,eACF/B,OAAA,CAACN,MAAM;MAACgC,OAAO,EAAC,WAAW;MAACa,KAAK,EAAC,SAAS;MAACC,OAAO,EAAEjC,WAAY;MAAAkB,QAAA,EAAC;IAElE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEhB;AAAC7B,EAAA,CAtDQD,SAAS;EAAA,QAEeH,aAAa,EAC3BN,WAAW;AAAA;AAAAiD,EAAA,GAHrBxC,SAAS;AAwDlB,eAAeA,SAAS;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
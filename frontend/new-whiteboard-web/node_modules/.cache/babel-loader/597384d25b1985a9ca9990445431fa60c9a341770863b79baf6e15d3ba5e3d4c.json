{"ast":null,"code":"var _jsxFileName = \"/Users/prakashkoukuntla/Goblins-Whiteboard-App/frontend/new-whiteboard-web/src/pages/WhiteboardLabelingPage.js\",\n  _s = $RefreshSig$();\n// src/pages/WhiteboardLabelingPage.js\nimport React, { useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { Container, Typography, Button } from \"@mui/material\";\nimport { Stage, Layer, Image as KonvaImage, Rect } from \"react-konva\";\nimport useImage from \"use-image\";\n\n// Mock data representing whiteboards, to be replaced by actual data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst whiteboards = [{\n  id: \"wb_456\",\n  imageUrl: \"https://via.placeholder.com/1200x800\",\n  annotated: true\n}, {\n  id: \"wb_457\",\n  imageUrl: \"https://via.placeholder.com/1200x800\",\n  annotated: false\n}, {\n  id: \"wb_458\",\n  imageUrl: \"https://via.placeholder.com/1200x800\",\n  annotated: false\n}];\nfunction WhiteboardLabelingPage() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const whiteboard = whiteboards.find(wb => wb.id === id);\n  const [image] = useImage(whiteboard ? whiteboard.imageUrl : \"\");\n  const [annotations, setAnnotations] = useState([]);\n  const [newAnnotation, setNewAnnotation] = useState(null);\n  const handleMouseDown = e => {\n    const {\n      x,\n      y\n    } = e.target.getStage().getPointerPosition();\n    setNewAnnotation({\n      x,\n      y,\n      width: 0,\n      height: 0\n    });\n  };\n  const handleMouseMove = e => {\n    if (!newAnnotation) return;\n    const stage = e.target.getStage();\n    const pointerPosition = stage.getPointerPosition();\n    setNewAnnotation({\n      ...newAnnotation,\n      width: pointerPosition.x - newAnnotation.x,\n      height: pointerPosition.y - newAnnotation.y\n    });\n  };\n  const handleMouseUp = () => {\n    if (newAnnotation) {\n      setAnnotations(prevAnnotations => {\n        const updatedAnnotations = [...prevAnnotations, newAnnotation];\n        console.log(\"Annotations saved:\", updatedAnnotations); // Auto-save action\n        return updatedAnnotations;\n      });\n      setNewAnnotation(null); // Reset current annotation\n    }\n  };\n  const handleNext = () => {\n    const currentIndex = whiteboards.findIndex(wb => wb.id === id);\n    const nextIndex = (currentIndex + 1) % whiteboards.length;\n    navigate(`/label/${whiteboards[nextIndex].id}`);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: false,\n    style: {\n      overflow: \"auto\",\n      height: \"100vh\",\n      display: \"flex\",\n      flexDirection: \"column\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: [\"Whiteboard ID: \", id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), whiteboard ? /*#__PURE__*/_jsxDEV(Stage, {\n      width: 1200,\n      height: 800,\n      onMouseDown: handleMouseDown,\n      onMouseMove: handleMouseMove,\n      onMouseUp: handleMouseUp,\n      style: {\n        margin: \"0 auto\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Layer, {\n        children: [/*#__PURE__*/_jsxDEV(KonvaImage, {\n          image: image,\n          width: 1200,\n          height: 800\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), annotations.map((rect, i) => /*#__PURE__*/_jsxDEV(Rect, {\n          x: rect.x,\n          y: rect.y,\n          width: rect.width,\n          height: rect.height,\n          fill: \"rgba(255,165,0,0.5)\"\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this)), newAnnotation && /*#__PURE__*/_jsxDEV(Rect, {\n          x: newAnnotation.x,\n          y: newAnnotation.y,\n          width: newAnnotation.width,\n          height: newAnnotation.height,\n          fill: \"rgba(0,0,255,0.5)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"error\",\n      children: \"Whiteboard not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      onClick: handleNext,\n      style: {\n        position: \"fixed\",\n        bottom: \"20px\",\n        right: \"20px\",\n        opacity: 0.7\n      },\n      children: \"Next Whiteboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(WhiteboardLabelingPage, \"QNlvShWQiVtklxvEAmAXjCLnpgE=\", false, function () {\n  return [useParams, useNavigate, useImage];\n});\n_c = WhiteboardLabelingPage;\nexport default WhiteboardLabelingPage;\nvar _c;\n$RefreshReg$(_c, \"WhiteboardLabelingPage\");","map":{"version":3,"names":["React","useState","useParams","useNavigate","Container","Typography","Button","Stage","Layer","Image","KonvaImage","Rect","useImage","jsxDEV","_jsxDEV","whiteboards","id","imageUrl","annotated","WhiteboardLabelingPage","_s","navigate","whiteboard","find","wb","image","annotations","setAnnotations","newAnnotation","setNewAnnotation","handleMouseDown","e","x","y","target","getStage","getPointerPosition","width","height","handleMouseMove","stage","pointerPosition","handleMouseUp","prevAnnotations","updatedAnnotations","console","log","handleNext","currentIndex","findIndex","nextIndex","length","maxWidth","style","overflow","display","flexDirection","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","onMouseDown","onMouseMove","onMouseUp","margin","map","rect","i","fill","color","onClick","position","bottom","right","opacity","_c","$RefreshReg$"],"sources":["/Users/prakashkoukuntla/Goblins-Whiteboard-App/frontend/new-whiteboard-web/src/pages/WhiteboardLabelingPage.js"],"sourcesContent":["// src/pages/WhiteboardLabelingPage.js\nimport React, { useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { Container, Typography, Button } from \"@mui/material\";\nimport { Stage, Layer, Image as KonvaImage, Rect } from \"react-konva\";\nimport useImage from \"use-image\";\n\n// Mock data representing whiteboards, to be replaced by actual data\nconst whiteboards = [\n  {\n    id: \"wb_456\",\n    imageUrl: \"https://via.placeholder.com/1200x800\",\n    annotated: true,\n  },\n  {\n    id: \"wb_457\",\n    imageUrl: \"https://via.placeholder.com/1200x800\",\n    annotated: false,\n  },\n  {\n    id: \"wb_458\",\n    imageUrl: \"https://via.placeholder.com/1200x800\",\n    annotated: false,\n  },\n];\n\nfunction WhiteboardLabelingPage() {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const whiteboard = whiteboards.find((wb) => wb.id === id);\n  const [image] = useImage(whiteboard ? whiteboard.imageUrl : \"\");\n\n  const [annotations, setAnnotations] = useState([]);\n  const [newAnnotation, setNewAnnotation] = useState(null);\n\n  const handleMouseDown = (e) => {\n    const { x, y } = e.target.getStage().getPointerPosition();\n    setNewAnnotation({ x, y, width: 0, height: 0 });\n  };\n\n  const handleMouseMove = (e) => {\n    if (!newAnnotation) return;\n    const stage = e.target.getStage();\n    const pointerPosition = stage.getPointerPosition();\n    setNewAnnotation({\n      ...newAnnotation,\n      width: pointerPosition.x - newAnnotation.x,\n      height: pointerPosition.y - newAnnotation.y,\n    });\n  };\n\n  const handleMouseUp = () => {\n    if (newAnnotation) {\n      setAnnotations((prevAnnotations) => {\n        const updatedAnnotations = [...prevAnnotations, newAnnotation];\n        console.log(\"Annotations saved:\", updatedAnnotations); // Auto-save action\n        return updatedAnnotations;\n      });\n      setNewAnnotation(null); // Reset current annotation\n    }\n  };\n\n  const handleNext = () => {\n    const currentIndex = whiteboards.findIndex((wb) => wb.id === id);\n    const nextIndex = (currentIndex + 1) % whiteboards.length;\n    navigate(`/label/${whiteboards[nextIndex].id}`);\n  };\n\n  return (\n    <Container\n      maxWidth={false}\n      style={{\n        overflow: \"auto\",\n        height: \"100vh\",\n        display: \"flex\",\n        flexDirection: \"column\",\n      }}\n    >\n      <Typography variant=\"h4\" gutterBottom>\n        Whiteboard ID: {id}\n      </Typography>\n\n      {whiteboard ? (\n        <Stage\n          width={1200}\n          height={800}\n          onMouseDown={handleMouseDown}\n          onMouseMove={handleMouseMove}\n          onMouseUp={handleMouseUp}\n          style={{ margin: \"0 auto\" }}\n        >\n          <Layer>\n            <KonvaImage image={image} width={1200} height={800} />\n            {annotations.map((rect, i) => (\n              <Rect\n                key={i}\n                x={rect.x}\n                y={rect.y}\n                width={rect.width}\n                height={rect.height}\n                fill=\"rgba(255,165,0,0.5)\"\n              />\n            ))}\n            {newAnnotation && (\n              <Rect\n                x={newAnnotation.x}\n                y={newAnnotation.y}\n                width={newAnnotation.width}\n                height={newAnnotation.height}\n                fill=\"rgba(0,0,255,0.5)\"\n              />\n            )}\n          </Layer>\n        </Stage>\n      ) : (\n        <Typography color=\"error\">Whiteboard not found</Typography>\n      )}\n\n      {/* Anchored Next Button */}\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={handleNext}\n        style={{\n          position: \"fixed\",\n          bottom: \"20px\",\n          right: \"20px\",\n          opacity: 0.7,\n        }}\n      >\n        Next Whiteboard\n      </Button>\n    </Container>\n  );\n}\n\nexport default WhiteboardLabelingPage;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,SAASC,SAAS,EAAEC,UAAU,EAAEC,MAAM,QAAQ,eAAe;AAC7D,SAASC,KAAK,EAAEC,KAAK,EAAEC,KAAK,IAAIC,UAAU,EAAEC,IAAI,QAAQ,aAAa;AACrE,OAAOC,QAAQ,MAAM,WAAW;;AAEhC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,GAAG,CAClB;EACEC,EAAE,EAAE,QAAQ;EACZC,QAAQ,EAAE,sCAAsC;EAChDC,SAAS,EAAE;AACb,CAAC,EACD;EACEF,EAAE,EAAE,QAAQ;EACZC,QAAQ,EAAE,sCAAsC;EAChDC,SAAS,EAAE;AACb,CAAC,EACD;EACEF,EAAE,EAAE,QAAQ;EACZC,QAAQ,EAAE,sCAAsC;EAChDC,SAAS,EAAE;AACb,CAAC,CACF;AAED,SAASC,sBAAsBA,CAAA,EAAG;EAAAC,EAAA;EAChC,MAAM;IAAEJ;EAAG,CAAC,GAAGd,SAAS,CAAC,CAAC;EAC1B,MAAMmB,QAAQ,GAAGlB,WAAW,CAAC,CAAC;EAC9B,MAAMmB,UAAU,GAAGP,WAAW,CAACQ,IAAI,CAAEC,EAAE,IAAKA,EAAE,CAACR,EAAE,KAAKA,EAAE,CAAC;EACzD,MAAM,CAACS,KAAK,CAAC,GAAGb,QAAQ,CAACU,UAAU,GAAGA,UAAU,CAACL,QAAQ,GAAG,EAAE,CAAC;EAE/D,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAAC2B,aAAa,EAAEC,gBAAgB,CAAC,GAAG5B,QAAQ,CAAC,IAAI,CAAC;EAExD,MAAM6B,eAAe,GAAIC,CAAC,IAAK;IAC7B,MAAM;MAAEC,CAAC;MAAEC;IAAE,CAAC,GAAGF,CAAC,CAACG,MAAM,CAACC,QAAQ,CAAC,CAAC,CAACC,kBAAkB,CAAC,CAAC;IACzDP,gBAAgB,CAAC;MAAEG,CAAC;MAAEC,CAAC;MAAEI,KAAK,EAAE,CAAC;MAAEC,MAAM,EAAE;IAAE,CAAC,CAAC;EACjD,CAAC;EAED,MAAMC,eAAe,GAAIR,CAAC,IAAK;IAC7B,IAAI,CAACH,aAAa,EAAE;IACpB,MAAMY,KAAK,GAAGT,CAAC,CAACG,MAAM,CAACC,QAAQ,CAAC,CAAC;IACjC,MAAMM,eAAe,GAAGD,KAAK,CAACJ,kBAAkB,CAAC,CAAC;IAClDP,gBAAgB,CAAC;MACf,GAAGD,aAAa;MAChBS,KAAK,EAAEI,eAAe,CAACT,CAAC,GAAGJ,aAAa,CAACI,CAAC;MAC1CM,MAAM,EAAEG,eAAe,CAACR,CAAC,GAAGL,aAAa,CAACK;IAC5C,CAAC,CAAC;EACJ,CAAC;EAED,MAAMS,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAId,aAAa,EAAE;MACjBD,cAAc,CAAEgB,eAAe,IAAK;QAClC,MAAMC,kBAAkB,GAAG,CAAC,GAAGD,eAAe,EAAEf,aAAa,CAAC;QAC9DiB,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEF,kBAAkB,CAAC,CAAC,CAAC;QACvD,OAAOA,kBAAkB;MAC3B,CAAC,CAAC;MACFf,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC;IAC1B;EACF,CAAC;EAED,MAAMkB,UAAU,GAAGA,CAAA,KAAM;IACvB,MAAMC,YAAY,GAAGjC,WAAW,CAACkC,SAAS,CAAEzB,EAAE,IAAKA,EAAE,CAACR,EAAE,KAAKA,EAAE,CAAC;IAChE,MAAMkC,SAAS,GAAG,CAACF,YAAY,GAAG,CAAC,IAAIjC,WAAW,CAACoC,MAAM;IACzD9B,QAAQ,CAAC,UAAUN,WAAW,CAACmC,SAAS,CAAC,CAAClC,EAAE,EAAE,CAAC;EACjD,CAAC;EAED,oBACEF,OAAA,CAACV,SAAS;IACRgD,QAAQ,EAAE,KAAM;IAChBC,KAAK,EAAE;MACLC,QAAQ,EAAE,MAAM;MAChBhB,MAAM,EAAE,OAAO;MACfiB,OAAO,EAAE,MAAM;MACfC,aAAa,EAAE;IACjB,CAAE;IAAAC,QAAA,gBAEF3C,OAAA,CAACT,UAAU;MAACqD,OAAO,EAAC,IAAI;MAACC,YAAY;MAAAF,QAAA,GAAC,iBACrB,EAACzC,EAAE;IAAA;MAAA4C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,EAEZzC,UAAU,gBACTR,OAAA,CAACP,KAAK;MACJ8B,KAAK,EAAE,IAAK;MACZC,MAAM,EAAE,GAAI;MACZ0B,WAAW,EAAElC,eAAgB;MAC7BmC,WAAW,EAAE1B,eAAgB;MAC7B2B,SAAS,EAAExB,aAAc;MACzBW,KAAK,EAAE;QAAEc,MAAM,EAAE;MAAS,CAAE;MAAAV,QAAA,eAE5B3C,OAAA,CAACN,KAAK;QAAAiD,QAAA,gBACJ3C,OAAA,CAACJ,UAAU;UAACe,KAAK,EAAEA,KAAM;UAACY,KAAK,EAAE,IAAK;UAACC,MAAM,EAAE;QAAI;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EACrDrC,WAAW,CAAC0C,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,kBACvBxD,OAAA,CAACH,IAAI;UAEHqB,CAAC,EAAEqC,IAAI,CAACrC,CAAE;UACVC,CAAC,EAAEoC,IAAI,CAACpC,CAAE;UACVI,KAAK,EAAEgC,IAAI,CAAChC,KAAM;UAClBC,MAAM,EAAE+B,IAAI,CAAC/B,MAAO;UACpBiC,IAAI,EAAC;QAAqB,GALrBD,CAAC;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMP,CACF,CAAC,EACDnC,aAAa,iBACZd,OAAA,CAACH,IAAI;UACHqB,CAAC,EAAEJ,aAAa,CAACI,CAAE;UACnBC,CAAC,EAAEL,aAAa,CAACK,CAAE;UACnBI,KAAK,EAAET,aAAa,CAACS,KAAM;UAC3BC,MAAM,EAAEV,aAAa,CAACU,MAAO;UAC7BiC,IAAI,EAAC;QAAmB;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzB,CACF;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,gBAERjD,OAAA,CAACT,UAAU;MAACmE,KAAK,EAAC,OAAO;MAAAf,QAAA,EAAC;IAAoB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAC3D,eAGDjD,OAAA,CAACR,MAAM;MACLoD,OAAO,EAAC,WAAW;MACnBc,KAAK,EAAC,WAAW;MACjBC,OAAO,EAAE1B,UAAW;MACpBM,KAAK,EAAE;QACLqB,QAAQ,EAAE,OAAO;QACjBC,MAAM,EAAE,MAAM;QACdC,KAAK,EAAE,MAAM;QACbC,OAAO,EAAE;MACX,CAAE;MAAApB,QAAA,EACH;IAED;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEhB;AAAC3C,EAAA,CA5GQD,sBAAsB;EAAA,QACdjB,SAAS,EACPC,WAAW,EAEZS,QAAQ;AAAA;AAAAkE,EAAA,GAJjB3D,sBAAsB;AA8G/B,eAAeA,sBAAsB;AAAC,IAAA2D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
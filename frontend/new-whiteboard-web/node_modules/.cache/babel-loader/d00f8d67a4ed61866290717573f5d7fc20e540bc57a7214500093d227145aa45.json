{"ast":null,"code":"import React,{useState,useRef,useEffect}from\"react\";import{useParams,useNavigate}from\"react-router-dom\";import{Container,Typography,IconButton,TextField,Paper,Button}from\"@mui/material\";import{ArrowBack}from\"@mui/icons-material\";import{Stage,Layer,Image as KonvaImage,Rect}from\"react-konva\";import useImage from\"use-image\";import axios from\"axios\";// Import axios for HTTP requests\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const confidenceColors=[\"rgba(0, 255, 0, 0.5)\",// High Confidence (Green)\n\"rgba(255, 165, 0, 0.5)\",// Medium Confidence (Orange)\n\"rgba(255, 0, 0, 0.5)\"// Low Confidence (Red)\n];function WhiteboardLabelingPage(){const{id}=useParams();const navigate=useNavigate();const[whiteboard,setWhiteboard]=useState(null);const[image]=useImage(whiteboard?whiteboard.imageUrl:\"\");const[annotations,setAnnotations]=useState([]);const[newAnnotation,setNewAnnotation]=useState(null);const[activeAnnotation,setActiveAnnotation]=useState(null);const[transcription,setTranscription]=useState(\"\");const[panelWidth,setPanelWidth]=useState(70);const transcriptionRef=useRef(null);const[pendingTranscription,setPendingTranscription]=useState(\"\");// Load whiteboard data and annotations from backend\nuseEffect(()=>{const fetchWhiteboardData=async()=>{try{const whiteboardRes=await axios.get(`http://localhost:5001/whiteboards/${id}`,{withCredentials:true});setWhiteboard(whiteboardRes.data);// Fetch and set annotations\nconst annotationsRes=await axios.get(`http://localhost:5001/whiteboards/${id}/annotations`,{withCredentials:true});setAnnotations(annotationsRes.data);console.log(\"IT GOT HERE\");console.log(annotationsRes.data);}catch(error){console.error(\"Error fetching whiteboard data:\",error);}};fetchWhiteboardData();},[id]);useEffect(()=>{if(activeAnnotation!==null&&transcriptionRef.current){transcriptionRef.current.focus();}},[activeAnnotation]);const handleMouseDown=e=>{const{x,y}=e.target.getStage().getPointerPosition();setNewAnnotation({x,y,width:0,height:0,confidenceLevel:0,transcription:\"\"});};const handleMouseMove=e=>{if(!newAnnotation)return;const stage=e.target.getStage();const pointerPosition=stage.getPointerPosition();setNewAnnotation({...newAnnotation,width:pointerPosition.x-newAnnotation.x,height:pointerPosition.y-newAnnotation.y});};const handleMouseUp=()=>{if(newAnnotation){const annotationToSave={...newAnnotation};// Copy current annotation\nsetNewAnnotation(null);// Clear newAnnotation to prevent duplicates\nsetTranscription(annotationToSave.transcription);// Set transcription for the new annotation\nsaveAnnotation(annotationToSave);// Save annotation to the backend\n}};// Function to save a new annotation to the backend\nconst saveAnnotation=async annotation=>{console.log(annotation);console.log(`/whiteboards/${id}/annotations`);try{const response=await axios.post(`http://localhost:5001/whiteboards/${id}/annotations`,annotation,{withCredentials:true});console.log(\"it got here\");// Update the annotations state with the newly saved annotation, including its backend `_id`\nsetAnnotations(prevAnnotations=>[...prevAnnotations,{...annotation,_id:response.data._id}]);}catch(error){console.error(\"Error saving annotation:\",error);}};// Function to update an existing annotation in the backend and in the state\nconst updateAnnotation=async(index,updatedFields)=>{const annotation=annotations[index];try{const response=await axios.patch(`http://localhost:5001/annotations/${annotation._id}`,updatedFields,{withCredentials:true});// Update the specific annotation in the state based on its index\nsetAnnotations(prevAnnotations=>prevAnnotations.map((a,i)=>i===index?response.data:a));}catch(error){console.error(\"Error updating annotation:\",error);}};const handleAnnotationClick=index=>{// Save current transcription if there's an active annotation and it has changed\nif(activeAnnotation!==null){saveTranscription();}// Cycle confidence level (color) of the clicked annotation\nconst updatedAnnotations=[...annotations];const currentAnnotation=updatedAnnotations[index];const nextConfidenceLevel=(currentAnnotation.confidenceLevel+1)%confidenceColors.length;updatedAnnotations[index]={...currentAnnotation,confidenceLevel:nextConfidenceLevel};setAnnotations(updatedAnnotations);setActiveAnnotation(index);setPendingTranscription(currentAnnotation.transcription||\"\");// Update confidence level in the backend\nupdateAnnotation(index,{confidenceLevel:nextConfidenceLevel});};const saveTranscription=()=>{var _annotations$activeAn;if(activeAnnotation!==null&&pendingTranscription!==((_annotations$activeAn=annotations[activeAnnotation])===null||_annotations$activeAn===void 0?void 0:_annotations$activeAn.transcription)){updateAnnotation(activeAnnotation,{transcription:pendingTranscription});}};const handleTranscriptionChange=event=>{const updatedTranscription=event.target.value;setPendingTranscription(updatedTranscription);};// Set pending transcription when active annotation changes\nuseEffect(()=>{if(activeAnnotation!==null){var _annotations$activeAn2;setPendingTranscription(((_annotations$activeAn2=annotations[activeAnnotation])===null||_annotations$activeAn2===void 0?void 0:_annotations$activeAn2.transcription)||\"\");}},[activeAnnotation,annotations]);const handleResize=e=>{const newWidth=e.clientX/window.innerWidth*100;setPanelWidth(Math.max(30,Math.min(newWidth,85)));};return/*#__PURE__*/_jsxs(Container,{maxWidth:false,style:{height:\"100vh\",display:\"flex\",padding:0},children:[/*#__PURE__*/_jsxs(\"div\",{style:{width:`${panelWidth}%`,overflowY:\"auto\",position:\"relative\"},children:[/*#__PURE__*/_jsx(IconButton,{onClick:async()=>{try{await saveTranscription();// Save transcription before navigating\nnavigate(\"/whiteboards\");// Navigate only after save completes\n}catch(error){console.error(\"Failed to save transcription before navigating:\",error);}},style:{position:\"absolute\",top:\"20px\",left:\"20px\",zIndex:1000},children:/*#__PURE__*/_jsx(ArrowBack,{fontSize:\"large\"})}),/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",style:{position:\"absolute\",top:\"20px\",left:\"50%\",transform:\"translateX(-50%)\",zIndex:1000,opacity:0.8,backgroundColor:\"white\",padding:\"5px 15px\",borderRadius:\"4px\"},children:[\"Whiteboard ID: \",id]}),whiteboard?/*#__PURE__*/_jsx(Stage,{width:1200,height:800,onMouseDown:handleMouseDown,onMouseMove:handleMouseMove,onMouseUp:handleMouseUp,style:{margin:\"0 auto\"},children:/*#__PURE__*/_jsxs(Layer,{children:[/*#__PURE__*/_jsx(KonvaImage,{image:image,width:1200,height:800}),annotations.map((rect,i)=>/*#__PURE__*/_jsx(Rect,{x:rect.x,y:rect.y,width:rect.width,height:rect.height,fill:confidenceColors[rect.confidenceLevel],onClick:()=>handleAnnotationClick(i)},i)),newAnnotation&&/*#__PURE__*/_jsx(Rect,{x:newAnnotation.x,y:newAnnotation.y,width:newAnnotation.width,height:newAnnotation.height,fill:\"rgba(0,0,255,0.5)\"})]})}):/*#__PURE__*/_jsx(Typography,{color:\"error\",children:\"Whiteboard not found\"})]}),/*#__PURE__*/_jsx(\"div\",{onMouseDown:e=>{document.addEventListener(\"mousemove\",handleResize);document.addEventListener(\"mouseup\",()=>{document.removeEventListener(\"mousemove\",handleResize);});},style:{width:\"5px\",cursor:\"col-resize\",backgroundColor:\"#ccc\"}}),activeAnnotation!==null&&/*#__PURE__*/_jsxs(Paper,{style:{width:`${100-panelWidth}%`,padding:\"20px\",display:\"flex\",flexDirection:\"column\",alignItems:\"flex-start\",boxShadow:\"0px 4px 12px rgba(0,0,0,0.2)\",overflowY:\"auto\"},square:true,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"Edit Transcription\"}),/*#__PURE__*/_jsx(TextField,{fullWidth:true,label:\"Transcription\",value:pendingTranscription,onChange:handleTranscriptionChange,onBlur:saveTranscription,multiline:true,rows:4,variant:\"outlined\",inputRef:transcriptionRef,autoFocus:true})]})]});}export default WhiteboardLabelingPage;","map":{"version":3,"names":["React","useState","useRef","useEffect","useParams","useNavigate","Container","Typography","IconButton","TextField","Paper","Button","ArrowBack","Stage","Layer","Image","KonvaImage","Rect","useImage","axios","jsx","_jsx","jsxs","_jsxs","confidenceColors","WhiteboardLabelingPage","id","navigate","whiteboard","setWhiteboard","image","imageUrl","annotations","setAnnotations","newAnnotation","setNewAnnotation","activeAnnotation","setActiveAnnotation","transcription","setTranscription","panelWidth","setPanelWidth","transcriptionRef","pendingTranscription","setPendingTranscription","fetchWhiteboardData","whiteboardRes","get","withCredentials","data","annotationsRes","console","log","error","current","focus","handleMouseDown","e","x","y","target","getStage","getPointerPosition","width","height","confidenceLevel","handleMouseMove","stage","pointerPosition","handleMouseUp","annotationToSave","saveAnnotation","annotation","response","post","prevAnnotations","_id","updateAnnotation","index","updatedFields","patch","map","a","i","handleAnnotationClick","saveTranscription","updatedAnnotations","currentAnnotation","nextConfidenceLevel","length","_annotations$activeAn","handleTranscriptionChange","event","updatedTranscription","value","_annotations$activeAn2","handleResize","newWidth","clientX","window","innerWidth","Math","max","min","maxWidth","style","display","padding","children","overflowY","position","onClick","top","left","zIndex","fontSize","variant","transform","opacity","backgroundColor","borderRadius","onMouseDown","onMouseMove","onMouseUp","margin","rect","fill","color","document","addEventListener","removeEventListener","cursor","flexDirection","alignItems","boxShadow","square","gutterBottom","fullWidth","label","onChange","onBlur","multiline","rows","inputRef","autoFocus"],"sources":["/Users/prakashkoukuntla/Whiteboard-Project/frontend/new-whiteboard-web/src/pages/WhiteboardLabelingPage.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport {\n  Container,\n  Typography,\n  IconButton,\n  TextField,\n  Paper,\n  Button,\n} from \"@mui/material\";\nimport { ArrowBack } from \"@mui/icons-material\";\nimport { Stage, Layer, Image as KonvaImage, Rect } from \"react-konva\";\nimport useImage from \"use-image\";\nimport axios from \"axios\"; // Import axios for HTTP requests\n\nconst confidenceColors = [\n  \"rgba(0, 255, 0, 0.5)\", // High Confidence (Green)\n  \"rgba(255, 165, 0, 0.5)\", // Medium Confidence (Orange)\n  \"rgba(255, 0, 0, 0.5)\", // Low Confidence (Red)\n];\n\nfunction WhiteboardLabelingPage() {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const [whiteboard, setWhiteboard] = useState(null);\n  const [image] = useImage(whiteboard ? whiteboard.imageUrl : \"\");\n  const [annotations, setAnnotations] = useState([]);\n  const [newAnnotation, setNewAnnotation] = useState(null);\n  const [activeAnnotation, setActiveAnnotation] = useState(null);\n  const [transcription, setTranscription] = useState(\"\");\n  const [panelWidth, setPanelWidth] = useState(70);\n  const transcriptionRef = useRef(null);\n  const [pendingTranscription, setPendingTranscription] = useState(\"\");\n\n  // Load whiteboard data and annotations from backend\n  useEffect(() => {\n    const fetchWhiteboardData = async () => {\n      try {\n        const whiteboardRes = await axios.get(\n          `http://localhost:5001/whiteboards/${id}`,\n          { withCredentials: true }\n        );\n        setWhiteboard(whiteboardRes.data);\n\n        // Fetch and set annotations\n        const annotationsRes = await axios.get(\n          `http://localhost:5001/whiteboards/${id}/annotations`,\n          { withCredentials: true }\n        );\n        setAnnotations(annotationsRes.data);\n        console.log(\"IT GOT HERE\");\n        console.log(annotationsRes.data);\n      } catch (error) {\n        console.error(\"Error fetching whiteboard data:\", error);\n      }\n    };\n\n    fetchWhiteboardData();\n  }, [id]);\n\n  useEffect(() => {\n    if (activeAnnotation !== null && transcriptionRef.current) {\n      transcriptionRef.current.focus();\n    }\n  }, [activeAnnotation]);\n\n  const handleMouseDown = (e) => {\n    const { x, y } = e.target.getStage().getPointerPosition();\n    setNewAnnotation({\n      x,\n      y,\n      width: 0,\n      height: 0,\n      confidenceLevel: 0,\n      transcription: \"\",\n    });\n  };\n\n  const handleMouseMove = (e) => {\n    if (!newAnnotation) return;\n    const stage = e.target.getStage();\n    const pointerPosition = stage.getPointerPosition();\n    setNewAnnotation({\n      ...newAnnotation,\n      width: pointerPosition.x - newAnnotation.x,\n      height: pointerPosition.y - newAnnotation.y,\n    });\n  };\n\n  const handleMouseUp = () => {\n    if (newAnnotation) {\n      const annotationToSave = { ...newAnnotation }; // Copy current annotation\n\n      setNewAnnotation(null); // Clear newAnnotation to prevent duplicates\n\n      setTranscription(annotationToSave.transcription); // Set transcription for the new annotation\n      saveAnnotation(annotationToSave); // Save annotation to the backend\n    }\n  };\n\n  // Function to save a new annotation to the backend\n  const saveAnnotation = async (annotation) => {\n    console.log(annotation);\n    console.log(`/whiteboards/${id}/annotations`);\n    try {\n      const response = await axios.post(\n        `http://localhost:5001/whiteboards/${id}/annotations`,\n        annotation,\n        { withCredentials: true }\n      );\n\n      console.log(\"it got here\");\n\n      // Update the annotations state with the newly saved annotation, including its backend `_id`\n      setAnnotations((prevAnnotations) => [\n        ...prevAnnotations,\n        { ...annotation, _id: response.data._id },\n      ]);\n    } catch (error) {\n      console.error(\"Error saving annotation:\", error);\n    }\n  };\n\n  // Function to update an existing annotation in the backend and in the state\n  const updateAnnotation = async (index, updatedFields) => {\n    const annotation = annotations[index];\n\n    try {\n      const response = await axios.patch(\n        `http://localhost:5001/annotations/${annotation._id}`,\n        updatedFields,\n        { withCredentials: true }\n      );\n\n      // Update the specific annotation in the state based on its index\n      setAnnotations((prevAnnotations) =>\n        prevAnnotations.map((a, i) => (i === index ? response.data : a))\n      );\n    } catch (error) {\n      console.error(\"Error updating annotation:\", error);\n    }\n  };\n\n  const handleAnnotationClick = (index) => {\n    // Save current transcription if there's an active annotation and it has changed\n    if (activeAnnotation !== null) {\n      saveTranscription();\n    }\n\n    // Cycle confidence level (color) of the clicked annotation\n    const updatedAnnotations = [...annotations];\n    const currentAnnotation = updatedAnnotations[index];\n    const nextConfidenceLevel =\n      (currentAnnotation.confidenceLevel + 1) % confidenceColors.length;\n\n    updatedAnnotations[index] = {\n      ...currentAnnotation,\n      confidenceLevel: nextConfidenceLevel,\n    };\n\n    setAnnotations(updatedAnnotations);\n    setActiveAnnotation(index);\n    setPendingTranscription(currentAnnotation.transcription || \"\");\n\n    // Update confidence level in the backend\n    updateAnnotation(index, { confidenceLevel: nextConfidenceLevel });\n  };\n\n  const saveTranscription = () => {\n    if (\n      activeAnnotation !== null &&\n      pendingTranscription !== annotations[activeAnnotation]?.transcription\n    ) {\n      updateAnnotation(activeAnnotation, {\n        transcription: pendingTranscription,\n      });\n    }\n  };\n\n  const handleTranscriptionChange = (event) => {\n    const updatedTranscription = event.target.value;\n    setPendingTranscription(updatedTranscription);\n  };\n\n  // Set pending transcription when active annotation changes\n  useEffect(() => {\n    if (activeAnnotation !== null) {\n      setPendingTranscription(\n        annotations[activeAnnotation]?.transcription || \"\"\n      );\n    }\n  }, [activeAnnotation, annotations]);\n\n  const handleResize = (e) => {\n    const newWidth = (e.clientX / window.innerWidth) * 100;\n    setPanelWidth(Math.max(30, Math.min(newWidth, 85)));\n  };\n\n  return (\n    <Container\n      maxWidth={false}\n      style={{ height: \"100vh\", display: \"flex\", padding: 0 }}\n    >\n      <div\n        style={{\n          width: `${panelWidth}%`,\n          overflowY: \"auto\",\n          position: \"relative\",\n        }}\n      >\n        <IconButton\n          onClick={async () => {\n            try {\n              await saveTranscription(); // Save transcription before navigating\n              navigate(\"/whiteboards\"); // Navigate only after save completes\n            } catch (error) {\n              console.error(\n                \"Failed to save transcription before navigating:\",\n                error\n              );\n            }\n          }}\n          style={{\n            position: \"absolute\",\n            top: \"20px\",\n            left: \"20px\",\n            zIndex: 1000,\n          }}\n        >\n          <ArrowBack fontSize=\"large\" />\n        </IconButton>\n\n        <Typography\n          variant=\"h6\"\n          style={{\n            position: \"absolute\",\n            top: \"20px\",\n            left: \"50%\",\n            transform: \"translateX(-50%)\",\n            zIndex: 1000,\n            opacity: 0.8,\n            backgroundColor: \"white\",\n            padding: \"5px 15px\",\n            borderRadius: \"4px\",\n          }}\n        >\n          Whiteboard ID: {id}\n        </Typography>\n        {whiteboard ? (\n          <Stage\n            width={1200}\n            height={800}\n            onMouseDown={handleMouseDown}\n            onMouseMove={handleMouseMove}\n            onMouseUp={handleMouseUp}\n            style={{ margin: \"0 auto\" }}\n          >\n            <Layer>\n              <KonvaImage image={image} width={1200} height={800} />\n              {annotations.map((rect, i) => (\n                <Rect\n                  key={i}\n                  x={rect.x}\n                  y={rect.y}\n                  width={rect.width}\n                  height={rect.height}\n                  fill={confidenceColors[rect.confidenceLevel]}\n                  onClick={() => handleAnnotationClick(i)}\n                />\n              ))}\n              {newAnnotation && (\n                <Rect\n                  x={newAnnotation.x}\n                  y={newAnnotation.y}\n                  width={newAnnotation.width}\n                  height={newAnnotation.height}\n                  fill=\"rgba(0,0,255,0.5)\"\n                />\n              )}\n            </Layer>\n          </Stage>\n        ) : (\n          <Typography color=\"error\">Whiteboard not found</Typography>\n        )}\n      </div>\n\n      {/* Divider for Resizing */}\n      <div\n        onMouseDown={(e) => {\n          document.addEventListener(\"mousemove\", handleResize);\n          document.addEventListener(\"mouseup\", () => {\n            document.removeEventListener(\"mousemove\", handleResize);\n          });\n        }}\n        style={{\n          width: \"5px\",\n          cursor: \"col-resize\",\n          backgroundColor: \"#ccc\",\n        }}\n      />\n\n      {/* Transcription Panel */}\n      {activeAnnotation !== null && (\n        <Paper\n          style={{\n            width: `${100 - panelWidth}%`,\n            padding: \"20px\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"flex-start\",\n            boxShadow: \"0px 4px 12px rgba(0,0,0,0.2)\",\n            overflowY: \"auto\",\n          }}\n          square\n        >\n          <Typography variant=\"h6\" gutterBottom>\n            Edit Transcription\n          </Typography>\n          <TextField\n            fullWidth\n            label=\"Transcription\"\n            value={pendingTranscription}\n            onChange={handleTranscriptionChange}\n            onBlur={saveTranscription}\n            multiline\n            rows={4}\n            variant=\"outlined\"\n            inputRef={transcriptionRef}\n            autoFocus\n          />\n        </Paper>\n      )}\n    </Container>\n  );\n}\n\nexport default WhiteboardLabelingPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}